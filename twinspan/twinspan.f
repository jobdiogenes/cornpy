C CORNELL ECOLOGY PROGRAM TWINSPAN - WRITTEN BY M.O. HILL, JULY 1979.
C SOURCE CODE AND ACCOMPANYING DOCUMENTATION ARE AVAILABLE FROM
C HUGH G. GAUCH, JR., ECOLOGY AND SYSTEMATICS, CORNELL UNIVERSITY
C ITHACA, NEW YORK 14850.
C
C PERFORMS TWO-WAY INDICATOR SPECIES ANALYSIS, ARRANGING SPECIES AND
C SAMPLES IN A TWO-WAY TABLE AT THE END.
C
C DIMENSIONED FOR 2000 SAMPLES, 5000 SPECIES, 130000 NON-ZERO ITEMS IN
C DATA-MATRIX.  IDAT IS DIMENSIONED 264000=2*(130000+2000).  JDAT IS
C DIMENSIONED WITH HALF THE LENGTH OF IDAT, AND THE FRONT OF IT IS
C EQUIVALENCED TO THE MIDDLE OF IDAT.
C
C INPUT DEVICES ARE 3 (INPUT PARAMETERS - SHOULD BE A COMPUTER
C TERMINAL IF POSSIBLE), 5 (DATA-MATRIX).
C
C OUTPUT DEVICES ARE 4 (MONITORING - SHOULD BE CONSOLE OF COMPUTER
C TERMINAL IF POSSIBLE; OTHERWISE THIS OUTPUT IS DISPENSABLE);
C 7 (COPY OF SOLUTION IN MACHINE-READABLE FORM - OPTIONAL AND ONLY
C SUPPLIED IF REQUESTED);  AND LINEPRINTER USING FORTRAN WORD PRINT.
C
C *** MODIFIED FOR VAX-11/750 VMS SYSTEM AT CSIRO WATER & LAND
C       RESOURCES, CANBERRA, BY P.R. MINCHIN.  SEPTEMBER, 1986.
C
C     - LOGICAL UNIT NUMBERS STORED IN VARIABLES:
C       
C       IUIN1  = INTERACTIVE INPUT OF OPTIONS (USUALLY A TERMINAL)
C       IUIN2  = INPUT DATA MATRIX FILE
C       IUOUT1 = MONITORING AND PROMPTS (USUALLY A TERMINAL)
C       IUOUT2 = OUTPUT 'PRINTER' FILE
C       IUOUT3 = OUTPUT COPY OF SOLUTION
C
C     - FORMAT OF OUTPUT COPY OF SOLUTION CHANGED.  IT IS NOW IN
C         THE FORM OF A SET OF CLASSIFICATION ARRAYS (AS DEFINED
C         IN THE 'CLUSTAN' PACKAGE), ONE ARRAY FOR EACH DIVISION
C         LEVEL.
C
C     - DIMENSIONS INCREASED.
C
C MODIFIED 6 MAY 1992 BY DR P.R. MINCHIN FOR SUN UNIX SYSTEMS:
C   SUN FORTRAN SPECIFIC CODE ADDED TO GET NAMES FOR THE FILES ON UNITS
C   IUIN2 (DATA MATRIX), IUOUT2 (PRINTED OUTPUT) AND IUOUT3 
C   (CLASSIFICATION ARRAYS) FROM THE COMMAND LINE, THEN OPEN THEM
C   EXPLICITLY.  DEFAULT NAMES FOR THE PRINTOUT AND CONFIGURATION FILES
C   ARE twinspan.printout AND twinspan.classifications RESPECTIVELY.
C
C **** Further modified by Dr Peter R. Minchin May-June 1997
C      - added PARAMETER statements for maximum dimensions
C      - changed max. dimensions to 2500, 5000, 330000
C      - updated handling of file names retrieved from command line
C      - moved character data to CHARACTER variables
C      - changed tests for indicators etc to allow for machine
C          precision, using a tolerance (PRECIS) of 0.0000001
C      - changed tolerance (TOL) to 0.000005 and iteration limit to 999
C          in RA - strict settings of Oksanen & Minchin 1997
C      - now accepts relaxed CCF format, with maximum number of pairs
C          per record on line 3
C See: Oksanen, J. & Minchin, P.R. 1997. Instability of ordination
C        results under changes in input data order: explanations and
C        remedies. Journal of Vegetation Science 8: 447-454.
C
C---Parameter statements added by P.Minchin May 1997
C---and constants replaced by parameters in array declarations
      PARAMETER (MAXSAM=2500, MAXSPP=5000, MAXDAT=330000)
C      PARAMETER (MAXSAM=2000, MAXSPP=5000, MAXDAT=264000)
      PARAMETER (MXDIM1=MAXDAT+MAXSAM, MXDIM2=MXDIM1+1,
     .  MXDIM3=2*MXDIM1)
      INTEGER IDAT(MXDIM3),JDAT(MXDIM1)
      INTEGER IX(MAXSAM),ICLASS(MAXSAM),IIROW(MAXSAM),IADDR(MAXSAM)
C---Changed INAME tp CHARACTER: P.Minchin June 1997
      INTEGER INFLAG(MAXSAM),IZONE(MAXSAM)
      CHARACTER*4 INAME1(MAXSAM),INAME2(MAXSAM)
      INTEGER IX1(MAXSAM),IX2(MAXSAM),IX3(MAXSAM)
      INTEGER IY(MAXSPP),JJCOL(MAXSPP),INDPOT(MAXSPP),INDORD(MAXSPP)
C---Changed JNAME tp CHARACTER: P.Minchin June 1997
      INTEGER JNFLAG(MAXSPP),JNAM(MAXSPP)
      CHARACTER*4 JNAME1(MAXSPP),JNAME2(MAXSPP)
      INTEGER IY0(MAXSPP),IY1(MAXSPP),IY2(MAXSPP)
C---Changed ITEM to CHARACTER: P.Minchin June 1997
      CHARACTER*4 ITEM(200)
      INTEGER LCUT(10),LWGT(10),LIND(10)
      INTEGER INDSIG(20),IPICT(104,25)
      REAL X(MAXSAM),XX(MAXSAM),RTOT(MAXSAM),RRWT(MAXSAM),ROWWGT(MAXSAM)
      REAL X3(MAXSAM),X4(MAXSAM),X5(MAXSAM)
      REAL Y(MAXSPP),YY(MAXSPP),CTOT(MAXSPP),CCWT(MAXSPP),COLWGT(MAXSPP)
      REAL TOT(511),TOTJ(511)
C---Changed TITLE to CHARACTER
      CHARACTER*4 TITLE(20)
C---CHARACTER VARIABLE FOR COMMAND LINE ADDED P.Minchin June 1997
      CHARACTER CMLINE*256
C---CHARACTER VARIABLES FOR FILE NAMES ADDED BY P.MINCHIN MAY 1992
      CHARACTER DATFIL*80, PRTFIL*80, OUTFIL*80
      EQUIVALENCE (IDAT(MXDIM2),JDAT(1))
      EQUIVALENCE (IX1(1),X3(1)),(IX2(1),X4(1)),(IX3(1),X5(1))
      EQUIVALENCE (IY0(1),COLWGT(1)),(IY1(1),CTOT(1)),(IY2(1),CCWT(1))
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      COMMON/PICT/MZ,MS,IZD,IIZD,ISD,ISHIFT,MZIND,MZCRIT,
     1MZOUT,NIND
C---Variable PRECIS added P.Minchin  June 1997
      COMMON/LIMS/RARE,FEEBLE,FRQLIM,TOL,RATLIM,REPLIM,PRECIS
      COMMON/SWITCH/IFAIL,IDIAGR,ISTOP,IREWT
      COMMON/IARBS/ICWEXP,IEND,MMIN,IPREXP,LEVMAX
      COMMON/ARBS/CWTMIN,CRLONG,CRCUT
      COMMON/WORK/ITEM
      COMMON/SECOND/ISEC
      COMMON/SPESPE/WTHIGH,SPE1,SPE2,SPE3
C---Max dimensions determined from parameters: P.Minchin June 1997
      NDAT=MXDIM3
      MMAX=MAXSAM
      NMAX=MAXSPP
C---NEXT FIVE ASSIGNMENTS ADDED BY P.R.MINCHIN SEPT 1986
      IUIN1=5
      IUIN2=1
      IUOUT1=6
      IUOUT2=3
      IUOUT3=2
C THIS IS THE END OF DECLARATIONS AND SETTING OF DIMENSIONS.
C---PRECIS is the precision used in deciding if species pass the test
C---to be indicators or preferentials: P.Minchin June 1997
      PRECIS=0.0000001
      NUMTAB=100
C NUMTAB IS MAXIMUM NUMBER OF SAMPLES PER PAGE IN FINAL TABULATION
      RARE=0.2
C RARE IS LIMIT OF RARITY FOR USE IN LISTING PREFERENTIAL SPECIES
      FEEBLE=0.1
C INDICATORS WITH PREFERENCE INDEX LESS THAN FEEBLE ARE REJECTED
      FRQLIM=0.2
C FRQLIM IS LIMIT OF RARITY FOR DOWNWEIGHTING. SPECIES OCCURRING IN
C A PROPORTION OF SAMPLES LESS THAN FRQLIM ARE DOWNWEIGHTED IN THE
C ORDINATION.
C---Tolerance reduced by P.Minchin Jan 1997
C      TOL=0.003
      TOL=0.000005
C TOL IS TOLERANCE FOR DECIDING WHETHER A TRIAL VECTOR IS EIGENVECTOR
      RATLIM=3.0
C RATLIM IS THE FREQUENCY-RATIO LIMIT USED IN SUBROUTINE POLISH
      REPLIM=2.0
C REPLIM IS THE FREQUENCY-RATIO LIMIT USED IN SUBROUTINE REPORT
      IREWT=2
C IREWT IS NUMBER OF TIMES SUBROUTINE POLISH TO BE CALLED PER DIVISION
      ICWEXP=1
C ICWEXP IS POWER (I.E. EXPONENT) OF DOWNWEIGHTING FOR SPECIES NOT UP
C TO RARITY LIMIT FRQLIM.
      IPREXP=4
C IPREXP IS POWER (I.E. EXPONENT) OF DOWNWEIGHTING USED FOR
C PREFERENTIALITY IN SUBROUTINE POLISH.
      CWTMIN=0.01
C CWTMIN IS SMALLEST MULTIPLIER THAN CAN BE USED IN DOWNWEIGHTING.
C NO SPECIES CAN BE DOWNWEIGHTED BY A FACTOR MORE THAN CWTMIN.
      CRCUT=0.2
C CRCUT IS LENGTH OF CRITICAL ZONE USED IN SUBROUTINE POLISH
      CRLONG=0.2
C CRLONG IS PROPORTION OF TOTAL LENGTH OF ORDINATION OCCUPIED BY
C CRITICAL ZONE, FOR PURPOSES OF DEFINING MISCLASSIFICATIONS ETC.
      MZCRIT=8
C MZCRIT IS NUMBER OF SEGMENTS IN CRITICAL ZONE.
      MZIND=4
C MZIND IS THE NUMBER OF SEGMENTS IN THE ZONE OF INDIFFERENCE
      MZOUT=4
C MZOUT IS THE NUMBER OF SEGMENTS TO BE RECOGNIZED OUTSIDE CRITICAL
C ZONE.  HENCE NUMBER OF ZONES IN DIAGRAM OF DIVISION (AVAILABLE
C AS AN OPTION) IS 2*MZOUT+MZCRIT.
      WTHIGH=2.0
C WTHIGH IS WEIGHTING GIVEN TO CHARACTERISTICS OF SPECIES THAT
C CORRESPOND TO HIGHER LEVELS OF FIDELITY - I.E. TO THOSE
C CHARACTERISTICS CORRESPONDING TO FIDELITY LEVELS SPE2,SPE3.
      SPE1=0.8
      SPE2=2.0
      SPE3=6.0
C SPEC1,2,3 ARE THRESHOLDS OF FIDELITY USED IN DEFINING THE
C ATTRIBUTES OF SPECIES FOR THE SPECIES-CLASSIFICATION.
COPEN(UNIT=3,DEVICE='TTY',ACCESS='SEQIN')
COPEN(UNIT=5,DEVICE='DSK',ACCESS='SEQIN',DIALOG)
COPEN(UNIT=4,DEVICE='TTY',ACCESS='SEQOUT')
COPEN(UNIT=7,DEVICE='DSK',ACCESS='SEQOUT',DIALOG)
C
C---New program banner added P.Minchin June 1997
C
      WRITE (IUOUT1,3010)
 3010 FORMAT (/1X,'*** TWINSPAN: Divisive Classification Program ***'//
     .  1X,'Written by Dr Mark O. Hill  July 1979'/
     .  1X,'Modified by Dr Peter R. Minchin  Feb 1988 - June 1997'//
     .  1X,'This version uses strict convergence criteria in ',
     .  'RA ordinations'/
     .  1X,'- see: Oksanen & Minchin (1997) J. Veg. Sci. 8: 447-454.'/)
C
C SPECIAL FILE HANDLING FOR Lahey FORTRAN 90 P.Minchin June 1997
C
C---Note: GETCL is a Lahey FORTRAN 90 intrinsic that returns the
C---contents of the command line.  IARGC and GETARG are my own
C---implementations of similar routines that are available in some
C---Unix FORTRAN compilers (e.g. Sun FORTRAN77)
C
C      CALL GETCL (CMLINE)
C      NARGS=IARGC(CMLINE)
      NARGS=IARGC()
      IF (NARGS.EQ.0) THEN
        WRITE (IUOUT1,3000)
 3000   FORMAT (/1X,'ENTER THE NAME OF THE INPUT DATA FILE'/)
        READ (IUIN1,3001) DATFIL
 3001   FORMAT (A80)
      ELSE
C        CALL GETARG (1,CMLINE,DATFIL)
        CALL GETARG (1,CMLINE)
      ENDIF
      OPEN (UNIT=IUIN2,FILE=DATFIL,STATUS='OLD')
      IF (NARGS.LT.3) THEN 
        PRTFIL='twinspan.prt'
        OPEN (UNIT=IUOUT2,FILE=PRTFIL,STATUS='UNKNOWN')
      ELSE
C        CALL GETARG (3,CMLINE,PRTFIL)
        CALL GETARG (3,CMLINE)
        OPEN (UNIT=IUOUT2,FILE=PRTFIL,STATUS='NEW')
      ENDIF
C
      CALL QUIKIN(MMAX,NMAX,NDAT,MM,NSPEC,INAME1,
     1INAME2,JNAME1,JNAME2,IDAT,IADDR,MDAT,TITLE,INFLAG)
      CALL ENTER(NSPEC,NL,LCUT,MMIN,MIND,JMAX,LEVMAX,
     1IDIAGR,IPUNCH,LWGT,LIND,INDORD)
C
C SPECIAL FILE HANDLING FOR SUN UNIX SYSTEMS  P.MINCHIN MAY 1992
C
      IF (IPUNCH.NE.0) THEN
        IF (NARGS.LT.2) THEN 
          OUTFIL='twinspan.out'
          OPEN (UNIT=IUOUT3,FILE=OUTFIL,STATUS='UNKNOWN')
        ELSE
C          CALL GETARG (2,CMLINE,OUTFIL)
          CALL GETARG (2,CMLINE)
          OPEN (UNIT=IUOUT3,FILE=OUTFIL,STATUS='NEW')
        ENDIF
      ENDIF
C
      MZ=MZCRIT+2*MZOUT
      MMZ=MZ+4
      MMS=MIND+4
      DO 50 J=1,NSPEC
   50 JNFLAG(J)=J
      CALL PSEUDO(MM,NN,NMAX,NL,NDAT,NSPEC,IDAT,LCUT,
     1JNFLAG,JNAME1,JNAME2,JNAM,INDPOT,IY)
      IF(MMIN.GT.MM) STOP
      IF (LEVMAX.EQ.0) STOP
      IF(NSPEC.GT.MMAX) WRITE (IUOUT2,1000) MMAX
      IF(NSPEC.GT.MMAX) WRITE (IUOUT1,1000) MMAX
 1000 FORMAT(//1X,'*** BEWARE ***  NUMBER OF SPECIES EXCEEDS',
     1' MMAX (=',I4,').'/
     21X,'NO SPECIES CLASSIFICATION IS POSSIBLE.')
      DO 60 II=1,MM
   60 RRWT(II)=1.0
      DO 165 JJ=1,NN
      IL=JNAM(JJ)
  165 CCWT(JJ)=FLOAT(LWGT(IL))+1.0E-5
      DO 170 JJ=1,NN
      J=IABS(INDPOT(JJ))
      JJJ=JNFLAG(J)
  170 IF(INDORD(JJJ).EQ.0) INDPOT(JJ)=-J
      WRITE (IUOUT2,1011)
 1011 FORMAT('1')
      ISEC=1
C     IF(IPUNCH.EQ.1) WRITE(7,1200) (TITLE(IT),IT=1,20)
C1200 FORMAT(1X,19A4,A3//1X,'SAMPLE CLASSIFICATION')
      CALL CLASS(MM,NN,NDAT,MIND,MMZ,MMS,IX,ICLASS,IIROW,IADDR,
     1INDPOT,INDORD,IZONE,IY,JJCOL,IDAT,INDSIG,IPICT,X,XX,RTOT,
     2RRWT,ROWWGT,Y,YY,CTOT,CCWT,COLWGT,INAME1,INAME2,JNAME1,
     3JNAME2,JNAM,X3,X4,X5,LIND,INFLAG,IPUNCH)
      ID=IADDR(MM)
  415 IF(IDAT(ID).EQ.-1) GOTO 420
      ID=ID+1
      GOTO 415
  420 NDAT=NDAT/2
      IF (ID.GT.NDAT) GOTO 999
      IID=NDAT
      DO 422 J=1,NSPEC
  422 Y(J)=0.0
  425 IDAT(IID)=IDAT(ID)
      IID=IID-1
      ID=ID-1
      IF(ID.EQ.0) GOTO 426
      GOTO 425
  426 JJJ=0
      ICMAX=0
      DO 431 II=1,MM
      IC=ICLASS(II)
  427 IF(IC*3.LE.NMAX) GOTO 428
      IC=IC/2
      GOTO 427
  428 ICLASS(II)=IC
  431 IF(IC.GT.ICMAX) ICMAX=IC
      IF (NSPEC.GT.MMAX) GOTO 999
      DO 432 IC=1,ICMAX
  432 TOT(IC)=0.0
      JD=0
      IBIG=10000
      DO 440 II=1,MM
      IC=ICLASS(II)
  433 IID=IID+1
      JJ=IDAT(IID)
      IF(JJ.EQ.-1) GOTO 437
      J=IABS(INDPOT(JJ))
      JD=JD+1
      IF(JD.GT.NDAT) GOTO 999
      JDAT(JD)=J*IBIG+IC
      TOT(IC)=TOT(IC)+1.0
      IF(J.EQ.JJJ) GOTO 435
      JJJ=J
      Y(J)=Y(J)+CCWT(J)*RRWT(II)
      ID=ID+1
      IDAT(ID)=J
      ID=ID+1
      IDAT(ID)=1
      IF(ID.GE.IID) GOTO 999
      GOTO 433
  435 IDAT(ID)=IDAT(ID)+1
      GOTO 433
  437 ID=ID+1
      IDAT(ID)=JJ
      JJJ=0
  440 CONTINUE
      DO 441 J=1,NSPEC
  441 RRWT(J)=Y(J)+0.00001
C WE NOW WORK ON SPECIES CLASSIFICATION
      IIBIG=IBIG-1
      DO 442 J=1,NSPEC
      JD=JD+1
      IF(JD.GT.NDAT) GOTO 999
  442 JDAT(JD)=J*IBIG+IIBIG
      CALL ISORT(JDAT,JD)
C MOVE MATRIX UP TO BACK OF ARRAY
      JJD=NDAT
  445 JDAT(JJD)=JDAT(JD)
      JJD=JJD-1
      JD=JD-1
      IF(JD.EQ.0) GOTO 450
      GOTO 445
C WE NOW RECONSTITUTE THE MATRIX AND PROCEED TO ACCUMULATE
C THE TOTALS FOR THE SAMPLE CATEGORIES
  450 IC=ICMAX
  455 ICC=IC/2
      TOT(ICC)=TOT(ICC)+TOT(IC)
      IC=IC-1
      IF(IC.GT.1) GOTO 455
      DO 470 JJJ=1,NSPEC
      DO 456 IC=1,ICMAX
  456 TOTJ(IC)=0.0
  458 JJD=JJD+1
      JJ=JDAT(JJD)
      J=JJ/IBIG
      IC=JJ-J*IBIG
      IF(IC.EQ.IIBIG) GOTO 460
      TOTJ(IC)=TOTJ(IC)+1.0
      GOTO 458
  460 IC=ICMAX
  462 IIC=IC/2
      TOTJ(IIC)=TOTJ(IIC)+TOTJ(IC)
      IC=IC-1
      IF(IC.GT.1) GOTO 462
      DO 464 IC=1,ICMAX
      RAT=TOTJ(IC)*(TOT(1)-TOT(IC))/(TOT(IC)*(TOTJ(1)-
     1TOTJ(IC))+1.0E-7)
      IF (RAT.LT.SPE1) GOTO 464
      JD=JD+1
      JDAT(JD)=IC*3-2
      IF (RAT.LT.SPE2) GOTO 464
      JD=JD+1
      JDAT(JD)=IC*3-1
      IF (RAT.LT.SPE3) GOTO 464
      JD=JD+1
      JDAT(JD)=IC*3
  464 CONTINUE
      JD=JD+1
      IF(JD.GE.JJD) GOTO 999
      JDAT(JD)=-1
  470 CONTINUE
C JDAT NOW CONTAINS DESIRED SPECIES INFORMATION.  IT IS NOW A
C MATTER OF FIXING UP WEIGHTS AND CLASSIFYING SPECIES
      DO 480 IC=1,ICMAX
      WEIGHT=1.0
      IIC=IC
  473 IIC=IIC*2
      IF(IIC.GT.1023) GOTO 476
      WEIGHT=WEIGHT*1.414
      GOTO 473
  476 WEIGHT=WEIGHT*TOT(IC)
      IIC=3*IC
      CCWT(IIC-2)=WEIGHT
      INDPOT(IIC-2)=IIC-2
      CCWT(IIC-1)=WEIGHT*WTHIGH
      INDPOT(IIC-1)=IIC-1
      CCWT(IIC)=WEIGHT*WTHIGH
      INDPOT(IIC)=IIC
  480 CONTINUE
      WRITE (IUOUT2,1011)
      ISEC=2
C     IF(IPUNCH.EQ.1) WRITE(7,1300)
C1300 FORMAT(//1X,'SPECIES CLASSIFICATION')
C---Dummy argument #33 changed to INFLAG (it isn't used anyway)
C---P.Minchin June 1997
      CALL CLASS(NSPEC,3*ICMAX,NDAT,0,MMZ,MMS,
     1IX,JNAM,IIROW,IADDR,INDPOT,INDORD,IZONE,IY,JJCOL,JDAT,
     2INDSIG,IPICT,X,XX,RTOT,RRWT,ROWWGT,Y,YY,CTOT,CCWT,COLWGT,
     3JNAME1,JNAME2,INAME1,INAME2,INFLAG,X3,X4,X5,LIND,JNFLAG,IPUNCH)
      CALL CLORD(MM,LEVMAX,ICLASS,IX)
      CALL CLORD(NSPEC,LEVMAX,JNAM,IY)
C WE HAVE NOW ESSENTIALLY GOT SAMPLES AND SPECIES ORDERED, BUT
C THE SPECIES ORDER MAY NEED TO BE REVERSED TO GET THINGS ON THE
C POSITIVE DIAGONAL.  ALSO WE ACCUMULATE SPECIES TOTALS IN INDPOT.
      DO 500 II=1,MM
      I=IX(II)
      IX1(II)=INFLAG(I)
C---Next 2 statements commented out by P.Minchin June 1997
C---i.e. Use of IX2, IX3 avoided
C      IX2(II)=INAME1(I)
C      IX3(II)=INAME2(I)
  500 X(I)=FLOAT(II)
      DO 510 JJ=1,NSPEC
      INDPOT(JJ)=0
      J=IY(JJ)
  510 Y(J)=FLOAT(JJ)
      TOT1=0.0
      TOTX=0.0
      TOTY=0.0
      TOTXY=0.0
      ID=0
      DO 520 II=1,MM
      AX=X(II)
  512 ID=ID+1
      J=IDAT(ID)
      IF(J.EQ.-1) GOTO 520
      AY=Y(J)
      ID=ID+1
      JQ=IDAT(ID)
      INDPOT(J)=INDPOT(J)+JQ
      Q=FLOAT(JQ)
      TOT1=TOT1+Q
      TOTX=TOTX+Q*AX
      TOTY=TOTY+Q*AY
      TOTXY=TOTXY+Q*AX*AY
      GOTO 512
  520 CONTINUE
      TOTXY=TOTXY-TOTX*TOTY/TOT1
      IF(TOTXY.GT.0.0) GOTO 537
C IN THIS CASE TOTXY IS NEGATIVE, I.E. IX AND IY ARE ORDERS
C THAT ARE NEGATIVELY CORRELATED, AND IY MUST BE REVERSED
      DO 530 J=1,NSPEC
  530 JJCOL(J)=IY(NSPEC-J+1)
      DO 535 J=1,NSPEC
  535 IY(J)=JJCOL(J)
  537 JMIN=1
      DO 540 J=1,NSPEC
      JJ=IY(J)
      IF(INDPOT(JJ).EQ.0) JMIN=JMIN+1
      IY0(J)=JNFLAG(JJ)
C---Next 2 statements commented out by P.Minchin June 1997
C---i.e. Use of IY1, IY2 avoided
C      IY1(J)=JNAME1(JJ)
C  540 IY2(J)=JNAME2(JJ)
  540 CONTINUE
C WE WANT TO PRINT OUT ONLY JMAX COMMONEST SPECIES
      WRITE (IUOUT2,1500)
 1500 FORMAT(////1X,'ORDER OF SPECIES INCLUDING RARER ONES')
C---Next statement altered by P.Minchin June 1997
C      WRITE (IUOUT2,1501) (IY0(J),IY1(J),IY2(J),J=JMIN,NSPEC)
      WRITE (IUOUT2,1501) (IY0(J),JNAME1(IY0(J)),JNAME2(IY0(J)),
     .  J=JMIN,NSPEC)
 1501 FORMAT((1X,7(I4,1X,A4,1X,A4,']'),I4,1X,A4,1X,A4))
      WRITE (IUOUT2,1502)
 1502 FORMAT(////1X,'ORDER OF SAMPLES')
C---Next statement altered by P.Minchin June 1997
C      WRITE (IUOUT2,1503) (IX1(II),IX2(II),IX3(II),II=1,MM)
      WRITE (IUOUT2,1503) (IX1(II),INAME1(IX1(II)),INAME2(IX1(II)),
     .  II=1,MM)
 1503 FORMAT((1X,7(I4,1X,2A4,' ]'),I4,1X,2A4))
      IF(JMAX.EQ.0) STOP
      IBIG=5000
      DO 542 J=1,NSPEC
      JJCOL(J)=IBIG*NSPEC
      Y(J)=1.0
  542 INDPOT(J)=-IBIG*INDPOT(J)-IBIG+J
      CALL ISORT(INDPOT,NSPEC)
      IF(JMAX.GT.NSPEC-JMIN+1) JMAX=NSPEC-JMIN+1
      DO 546 JJ=1,JMAX
      J=-INDPOT(JJ)
      J=(J/IBIG)*IBIG-J+IBIG
  546 JJCOL(J)=0
      DO 547 JJ=1,NSPEC
      J=IY(JJ)
  547 IY(JJ)=JJ*IBIG+J+JJCOL(J)
      CALL ISORT(IY,NSPEC)
      DO 548 JJ=1,NSPEC
      J=IY(JJ)
  548 IY(JJ)=J-(J/IBIG)*IBIG
  550 CALL JORDER(MM,NSPEC,NDAT,IDAT,
     1IADDR,IY,JJCOL,INDPOT)
      ITIMES=MM/NUMTAB
      IF(MM.NE.ITIMES*NUMTAB)ITIMES=ITIMES+1
      DO 600 IT=1,ITIMES
      IMIN=(IT-1)*NUMTAB+1
      IMAX=IT*NUMTAB
      IF(IMAX.GT.MM) IMAX=MM
      WRITE(IUOUT2,'(a1)') CHAR(12)
  600 CALL TABOUT(MM,NSPEC,IMIN,IMAX,1,JMAX,NDAT,IDAT,
     1IADDR,IX,IY,INFLAG,JNFLAG,JNAME1,JNAME2,ICLASS,JNAM)
            STOP
  999 WRITE (IUOUT2,1999)
      WRITE (IUOUT1,1999)
 1999 FORMAT (1X,'** STOP **  INSUFFICIENT ARRAY SPACE TO CONTINUE')
      STOP
      END
C
C---New Routines IARGC and GETARG added P.Minchin 1997 for getting
C---file names off the command line
C      INTEGER FUNCTION IARGC (CMLINE)
C
C Returns the number of tokens on the command line
C
C      CHARACTER*256 CMLINE
C      LOGICAL GOTONE
C      GOTONE=.FALSE.
C      N=0
C      DO 100 I=1,256
C        IF (CMLINE(I:I).NE.' ') THEN
C          IF (.NOT.GOTONE) THEN
C            GOTONE=.TRUE.
C            N=N+1
C          ENDIF
C        ELSE
C          IF (GOTONE) THEN
C            GOTONE=.FALSE.
C          ENDIF
C        ENDIF
C  100 CONTINUE
C      IARGC=N
C      RETURN
C      END
C      SUBROUTINE GETARG (N,CMLINE,ARG)
C
C Return the Nth token in CMLINE as ARG
C
C      CHARACTER CMLINE*256, ARG*80
C      LOGICAL GOTONE
C      GOTONE=.FALSE.
C      J=0
C      DO 100 I=1,256
C        IF (CMLINE(I:I).NE.' ') THEN
C          IF (.NOT.GOTONE) THEN
C            GOTONE=.TRUE.
C            J=J+1
C            IF (J.EQ.N) THEN
C              L=0
C              DO 50 K=I,256
C                IF (CMLINE(K:K).EQ.' ') RETURN
C                L=L+1
C                IF (L.GT.80) RETURN
C                ARG(L:L)=CMLINE(K:K)
C   50         CONTINUE
C              RETURN
C            ENDIF
C          ENDIF
C        ELSE
C          IF (GOTONE) THEN
C            GOTONE=.FALSE.
C          ENDIF
C        ENDIF
C  100 CONTINUE
C      ARG(1:1)=' '
C      RETURN
C      END
C
      SUBROUTINE QUIKIN(MMAX,NMAX,NDAT,MM,N,INAME1,
     1INAME2,JNAME1,JNAME2,IDAT,IBEGIN,NID,TITLE,INFLAG)
C READS IN DATA MATRIX BY SAMPLES, FOLLOWED BY ROW AND COLUMN NAMES IN
C SPECIFIED FORMAT.  THE SAMPLES MUST BE IN ASCENDING NUMERICAL
C ORDER.  SECOND HALF OF SUBROUTINE CONSISTS OF AN OPTION TO DELETE
C UNWANTED SAMPLES FROM THE ANALYSIS.
C---Changed INAME & JNAME to CHARACTER: P.Minchin June 1997
      INTEGER IDAT(NDAT)
      CHARACTER*4 INAME1(MMAX),INAME2(MMAX),JNAME1(NMAX),JNAME2(NMAX)
      INTEGER IBEGIN(MMAX),INFLAG(MMAX)
C---Changed TITLE & FMT to CHARACTER: P.Minchin June 1997
      REAL AITEM(100)
C---Added ITEMP(100) to replace use of ITEM: P.Minchin June 1997
      INTEGER ITEMP(100)
      CHARACTER*4 TITLE(20)
      CHARACTER FMT*60
C---References to ITEM(200) & /WORK/ deleted: P.Minchin 1997
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      WRITE (IUOUT2,1002) IUIN2
      WRITE (IUOUT1,1002) IUIN2
 1002 FORMAT(///1X,'READING DATA MATRIX FROM DEVICE ',I3)
      READ (IUIN2,1000) (TITLE(IT),IT=1,20)
 1000 FORMAT(20A4)
      WRITE (IUOUT2,2000) (TITLE(IT),IT=1,20)
      WRITE (IUOUT1,2001) (TITLE(IT),IT=1,20)
 2001 FORMAT(//1X,19A4,A3//)
 2000 FORMAT(//1X,20A4//)
      READ (IUIN2,1001) FMT,NITEM
 1001 FORMAT(A60,8X,I2)
C---Handling of "relaxed" CCF files: P.Minchin July 1997
      IF (NITEM.LE.0) READ (IUIN2,*) NITEM
      DO 10 II=1,MMAX
   10 INFLAG(II)=0
      ID=0
      N=0
      III=1
      ITEMP(NITEM+1)=0
   40 READ (IUIN2,FMT) II,(ITEMP(IT),AITEM(IT),IT=1,NITEM)
      IF(II.EQ.III) GOTO 50
      ID=ID+1
      IDAT(ID)=-1
      IF(II.EQ.0) GOTO 100
      IBEGIN(II)=ID+1
      IF(II.LT.III) GOTO 999
      III=II
   50 IT=0
   55 IT=IT+1
      J=ITEMP(IT)
      IF(J) 997,40,56
   56 IF(J.GT.N) N=J
      INFLAG(II)=1
      ID=ID+1
      IDAT(ID)=J
      AIJ=AITEM(IT)
      IF(AIJ.LT.0.0) GOTO 997
      ID=ID+1
      IDAT(ID)=IFIX(AIJ*1000.0+0.5)
      IF(ID.GT.NDAT-3) GOTO 996
      GOTO 55
  100 MM=III
      IF(MM.GT.MMAX) GOTO 995
      IF(N.GT.NMAX) GOTO 994
      NID=ID
      IBEGIN(1)=1
C WE NOW READ THE SPECIES NAMES FOLLOWED BY THE SAMPLE NAMES
      READ (IUIN2,1100) (JNAME1(J),JNAME2(J),J=1,N)
      READ (IUIN2,1100) (INAME1(I),INAME2(I),I=1,MM)
 1100 FORMAT(20A4)
      WRITE (IUOUT1,1101) MM,N,NID
      WRITE (IUOUT2,1101) MM,N,NID
 1101 FORMAT('0NUMBER OF SAMPLES',I6/
     1'0NUMBER OF SPECIES',I6/
     2'0LENGTH OF RAW DATA ARRAY',I6)
      IID=120
      IF(NID.LT.IID) IID=NID
      WRITE (IUOUT2,1102) (IDAT(ID),ID=1,IID)
 1102 FORMAT(1X,12I10)
      IF(NID.LE.120) GOTO 150
      IF(NID.LE.240) GOTO 140
      WRITE (IUOUT2,1103)
 1103 FORMAT(1X,6X,28('....'),'..')
  140 IID=NID-119
      IF(IID.LT.121) IID=121
      WRITE (IUOUT2,1102) (IDAT(ID),ID=IID,NID)
  150 WRITE (IUOUT2,1104)
 1104 FORMAT('0SPECIES NAMES')
      WRITE (IUOUT2,1105) (J,JNAME1(J),JNAME2(J),J=1,N)
 1105 FORMAT((1X,7(I4,1X,A4,1X,A4,']'),I4,1X,A4,1X,A4))
      WRITE (IUOUT2,1106)
 1106 FORMAT('0SAMPLE NAMES')
      WRITE (IUOUT2,1107) (II,INAME1(II),INAME2(II),II=1,MM)
 1107 FORMAT((1X,7(I4,1X,2A4,' ]'),I4,1X,2A4))
      WRITE (IUOUT1,2100)
      WRITE (IUOUT2,2100)
 2100 FORMAT(///1X,'DO YOU WISH TO OMIT SOME SAMPLES?')
      CALL OMIT(INFLAG,MM)
      I=0
      ID=0
      DO 400 II=1,MM
      IF(INFLAG(II).NE.1) GOTO 400
      I=I+1
      INAME1(I)=INAME1(II)
      INAME2(I)=INAME2(II)
      INFLAG(I)=II
      IID=IBEGIN(II)
  350 ID=ID+1
      IDAT(ID)=IDAT(IID)
      IF(IDAT(IID).EQ.-1) GOTO 400
      IID=IID+1
      GOTO 350
  400 CONTINUE
      MM=I
      NID=ID
      RETURN
  994 WRITE (IUOUT2,1994) N,NMAX
      WRITE (IUOUT1,1994) N,NMAX
 1994 FORMAT(1X,'***ABORT*** LARGEST SPECIES NUMBER ',
     1'IS',I4,'BUT SHOULD NOT EXCEED',I4)
      STOP
  995 WRITE (IUOUT2,1995) MM,MMAX
      WRITE (IUOUT1,1995) MM,MMAX
 1995 FORMAT(1X,'***ABORT*** LARGEST SAMPLE NUMBER ',
     1'IS',I4,'BUT SHOULD NOT EXCEED',I4)
      STOP
  996 WRITE (IUOUT2,1996) II
      WRITE (IUOUT1,1996) II
 1996 FORMAT(1X,'***ABORT*** NO MORE SPACE FOR DATA ',
     1'MATRIX, STOPPED AT SAMPLE',I4)
      STOP
  997 WRITE (IUOUT2,1997) II
      WRITE (IUOUT1,1997) II
 1997 FORMAT(1X,'***ABORT*** NEGATIVE NUMBER FOUND IN SAMPLE',I4)
      STOP
  999 WRITE (IUOUT2,1999) III
      WRITE (IUOUT1,1999) III
 1999 FORMAT(1X,'***ABORT*** NON-SEQUENTIAL SAMPLE',
     1' NUMBER FOUND AFTER SAMPLE',I4)
      STOP
      END
C
      SUBROUTINE ENTER(NSPEC,NL,LCUT,MMIN,MIND,JMAX,LEVMAX,
     1IDIAGR,IPUNCH,LWGT,LIND,INDPOT)
C THIS SUBROUTINE ENTERS PARAMETERS FROM DEVICE IUIN1
      INTEGER LCUT(9),LWGT(9),LIND(9),INDPOT(NSPEC)
      REAL CUT(9)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      WRITE (IUOUT1,2000)
      WRITE (IUOUT2,2000)
 2000 FORMAT('1','NOW ENTER INPUT PARAMETERS'/1X)
   10 WRITE (IUOUT2,2005)
      WRITE (IUOUT1,2005)
 2005 FORMAT(1X,'ENTER NUMBER (NOT EXCEEDING 9) OF PSEUDOSPCIES CUT ',
     1'LEVELS'/1X,'OR TYPE -1 FOR DEFAULT CUT LEVELS',
     2', WHICH ARE 0 2 5 10 20.')
      READ (IUIN1,*) NL
      WRITE (IUOUT2,2010) NL
      WRITE (IUOUT1,2010) NL
 2010 FORMAT(1X,'ANSWER = ',I2)
      IF(NL.EQ.-1) GOTO 18
      IF(NL.GE.1.AND.NL.LE.9) GOTO 13
      WRITE (IUOUT1,2013)
      WRITE (IUOUT2,2013)
 2013 FORMAT(1X,'*** BEWARE ***  VALUE LIES OUTSIDE LIMITS',
     1' 1,9  -  TRY AGAIN')
      GOTO 10
   13 WRITE (IUOUT1,2015) NL
      WRITE (IUOUT2,2015) NL
 2015 FORMAT('0NOW ENTER',I4,'  CUT LEVELS')
      READ (IUIN1,*) (CUT(IL),IL=1,NL)
      IF(NL.EQ.1) GOTO 20
      DO 14 IL=2,NL
      IF(CUT(IL-1).GT.CUT(IL)) GOTO 16
   14 CONTINUE
      GOTO 20
   16 WRITE (IUOUT2,2016)
      WRITE (IUOUT1,2016)
 2016 FORMAT(1X,'*** BEWARE ***   CUT LEVELS OUT OF ORDER - TRY',
     1' AGAIN')
      GOTO 10
   18 NL=5
      CUT(1)=0.0
      CUT(2)=2.0
      CUT(3)=5.0
      CUT(4)=10.0
      CUT(5)=20.0
   20 WRITE (IUOUT2,2020) (CUT(IL),IL=1,NL)
      WRITE (IUOUT1,2020) (CUT(IL),IL=1,NL)
 2020 FORMAT('0CUT LEVELS'/1X,9F8.2)
      DO 30 IL=1,NL
   30 LCUT(IL)=IFIX(1000.0*CUT(IL)+0.5)
      WRITE (IUOUT1,2030)
      WRITE (IUOUT2,2030)
 2030 FORMAT('0ENTER MINIMUM GROUP SIZE FOR DIVISION')
      CALL PARA(MMIN,2,10000,5)
      WRITE (IUOUT1,2040)
      WRITE (IUOUT2,2040)
 2040 FORMAT('0ENTER MAXIMUM NUMBER OF INDICATORS PER DIVISION')
      CALL PARA(MIND,0,15,7)
      WRITE (IUOUT1,2050)
      WRITE (IUOUT2,2050)
 2050 FORMAT('0ENTER MAXIMUM NUMBER OF SPECIES IN FINAL TABULATION')
      CALL PARA(JMAX,0,1000,100)
      WRITE (IUOUT1,2060)
      WRITE (IUOUT2,2060)
 2060 FORMAT('0ENTER MAXIMUM LEVEL OF DIVISIONS')
      CALL PARA(LEVMAX,0,15,6)
      WRITE (IUOUT1,2070)
      WRITE (IUOUT2,2070)
 2070 FORMAT('0TYPE 1 IF DIAGRAMS OF DIVISIONS ARE WANTED.')
      CALL PARA(IDIAGR,0,1,0)
      WRITE (IUOUT1,2075) IUOUT3
      WRITE (IUOUT2,2075) IUOUT3
 2075 FORMAT('0TYPE 1 IF QUADRAT AND SPECIES CLASSIFICATION ARRAYS ',
     1'ARE TO BE WRITTEN'/ 1X,'TO FILE ',I3)
      CALL PARA(IPUNCH,0,1,0)
      WRITE (IUOUT1,2080)
      WRITE (IUOUT2,2080)
 2080 FORMAT('0ENTER WEIGHTS FOR LEVELS OF PSEUDOSPECIES.'/
     11X,'FOR EXAMPLE WEIGHTS  1 2 2 2  SIGNIFY THAT PSEUDOSPECIES'/
     21X,'CORRESPONDING TO 3 HIGHER CUT LEVELS ARE TO BE GIVEN TWICE'/
     31X,'THE WEIGHT OF PSEUDOSPECIES AT THE LOWEST LEVEL.')
      CALL VPARA(LWGT,NL,0,1000000)
      WRITE (IUOUT1,2090)
      WRITE (IUOUT2,2090)
 2090 FORMAT('0ENTER INDICATOR POTENTIALS FOR CUT LEVELS.'/
     11X,'FOR EXAMPLE INDICATOR POTENTIALS   1 0 0 1 0   SIGNIFY '/
     21X,'THAT PSEUDOSPECIES AT LEVELS 1 AND 4 CAN BE USED AS'/
     31X,'INDICATORS, BUT THAT THOSE AT OTHER LEVELS CANNOT.'/
     41X,'IN THE DEFAULT CASE, ALL PSEUDOSPECIES ARE AVAILABLE'/
     51X,'AS INDICATORS.')
      CALL VPARA(LIND,NL,0,1)
      WRITE (IUOUT1,2100)
      WRITE (IUOUT2,2100)
 2100 FORMAT('0DO YOU WISH TO OMIT SOME SPECIES FROM LIST OF'/
     11X,'POTENTIAL INDICATORS?  SPECIES OMITTED FROM THIS LIST'/
     21X,'ARE USED IN THE CALCULATION, BUT CANNOT APPEAR AS',
     3' INDICATORS.')
      DO 50 J=1,NSPEC
   50 INDPOT(J)=1
      CALL OMIT(INDPOT,NSPEC)
      RETURN
      END
C
      SUBROUTINE OMIT(INFLAG,MM)
C STARTING WITH A VECTOR INFLAG, SETS TO ZERO ANY ITEMS THAT ARE
C TYPED IN FROM TERMINAL.
      INTEGER INFLAG(MM)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      WRITE (IUOUT1,2100)
      WRITE (IUOUT2,2100)
 2100 FORMAT(1X,'ENTER NUMBERS (NOT NAMES) OF ITEMS TO BE ',
     1'OMITTED'/1X,'ONE PER CARD, ENDING LIST WITH A -1.'/
     21X,'OTHER NEGATIVE NUMBERS DENOTE SEQUENCES.  FOR EXAMPLE '/
     31X,'A 4 FOLLOWED BY A -8 OMITS ITEMS 4 THROUGH 8.')
      NONONO=MM+1
  200 READ (IUIN1,*) NONO
      IF(NONO.EQ.-1) GOTO 300
      IF(NONO.GT.MM) GOTO 260
      IF(NONO.LT.1) GOTO 250
      WRITE (IUOUT2,2101) NONO
      WRITE (IUOUT1,2101) NONO
 2101 FORMAT(1X,'OMIT ITEM',I6)
      INFLAG(NONO)=0
      NONONO=NONO
      GOTO 200
  250 IF(NONO.LT.-MM) GOTO 260
      IF(NONO.GT.-NONONO-1) GOTO 260
      NONO=-NONO
      DO 255 II=NONONO,NONO
  255 INFLAG(II)=0
      NONO=-NONO
      WRITE (IUOUT1,2104) NONONO,NONO
      WRITE (IUOUT2,2105) NONO
 2104 FORMAT(1X,'OMIT ITEMS',2I5)
 2105 FORMAT('+',9X,'S',5X,I5)
      NONONO=MM+1
      GOTO 200
  260 WRITE (IUOUT2,2103) NONO
      WRITE (IUOUT1,2103) NONO
 2103 FORMAT(1X,'*** BEWARE ***  INADMISSIBLE NUMBER',I6,' - IGNORED')
      GOTO 200
  300 WRITE (IUOUT2,2102) NONO
      WRITE (IUOUT1,2102) NONO
 2102 FORMAT(1X,9X,I6)
      RETURN
      END
C
      SUBROUTINE PARA(K,MIN,MAX,KK)
C READS PARAMETER K, CHECKS BOUNDS MIN AND MAX, AND SETS THE VALUE OF
C K TO THE DEFAULT VALUE KK IF K.EQ.-1.
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
   10 WRITE (IUOUT1,1000) KK,MIN,MAX
      WRITE (IUOUT2,1000) KK,MIN,MAX
 1000 FORMAT(1X,'TYPE -1 FOR DEFAULT VALUE ( =',I3,');  OTHERWISE',
     1' TYPE (INTEGER) VALUE REQUIRED,'/
     21X,'WHICH MUST NOT LIE OUTSIDE LIMITS',2I6)
      READ (IUIN1,*) K
      WRITE (IUOUT2,1001) K
      WRITE (IUOUT1,1001) K
 1001 FORMAT(1X,'ANSWER=',I5)
      IF(K.GE.MIN.AND.K.LE.MAX) RETURN
      IF(K.EQ.-1) GOTO 20
      WRITE (IUOUT2,1002) MIN,MAX
      WRITE (IUOUT1,1002) MIN,MAX
 1002 FORMAT(1X,'*** BEWARE ***   VALUE LIES OUTSIDE ALLOWED LIMITS',
     12I6,'   - TRY AGAIN')
      GOTO 10
   20 K=KK
      WRITE (IUOUT2,1003) K
      WRITE (IUOUT1,1003) K
 1003 FORMAT(1X,'VALUE SET TO',I5,' BY DEFAULT')
      RETURN
      END
C
      SUBROUTINE VPARA(IX,M,MIN,MAX)
C READS IN PARAMETERS IX AND CHECKS WHETHER IN RANGE MIN,MAX
      INTEGER IX(M)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
   50 WRITE (IUOUT2,1000)
      WRITE (IUOUT1,1000)
 1000 FORMAT(1X,'TYPE -1 FOR DEFAULT VALUES (I.E. IF ALL VALUES TO BE',
     1' SET TO 1)'/1X,'OR TYPE 0 IF NON-DEFAULT VALUES ARE TO BE',
     2' ENTERED')
      READ (IUIN1,*) K
      WRITE (IUOUT2,1001) K
      WRITE (IUOUT1,1001) K
 1001 FORMAT(1X,'ANSWER=',I5)
      IF(K.NE.0) GOTO 100
      WRITE (IUOUT2,1002) M,MIN,MAX
      WRITE (IUOUT1,1002) M,MIN,MAX
 1002 FORMAT(1X,'NOW',I5,'  INTEGER VALUES MUST BE SUPPLIED'/
     11X,'NONE OF WHICH MUST LIE OUTSIDE LIMITS',2I9)
      READ (IUIN1,*) (IX(I),I=1,M)
      WRITE (IUOUT1,1003)
      WRITE (IUOUT2,1003)
 1003 FORMAT(1X,'ANSWER = ')
      WRITE (IUOUT1,1004) (IX(I),I=1,M)
      WRITE (IUOUT2,1005) (IX(I),I=1,M)
 1004 FORMAT(1X,20I4)
 1005 FORMAT(1X,20I6)
      DO 60 I=1,M
      K=IX(I)
      IF(K.LT.MIN.OR.K.GT.MAX) GOTO 150
   60 CONTINUE
      RETURN
  100 IF(K.EQ.-1) GOTO 200
  150 WRITE (IUOUT1,1010) K
      WRITE (IUOUT2,1010) K
 1010 FORMAT(1X,'*** BEWARE ***  UNACCEPTABLE VALUE',
     1I6,2X,' - TRY AGAIN')
      GOTO 50
  200 DO 300 I=1,M
  300 IX(I)=1
      RETURN
      END
C
      SUBROUTINE ISORT(IX,N)
      INTEGER IX(N)
C EFFICIENT (HEAP-SORT) IN SITU SORTING OF VECTOR IX(N)
      DO 10 I=1,N
      J=I
      JX=IX(J)
    5 IF(J.EQ.1) GOTO 8
      JJ=J/2
      JJX=IX(JJ)
      IF(JJX.GE.JX) GOTO 8
      IX(J)=JJX
      J=JJ
      GOTO 5
    8 IX(J)=JX
   10 CONTINUE
      I=N
      GOTO 14
   12 IX(J)=JX
   14 IF(I.EQ.1) RETURN
      JX=IX(I)
      IX(I)=IX(1)
      I=I-1
      J=1
      JJ=2
   15 IF(I-JJ) 12,17,16
   16 JJX=IX(JJ)
      JJJ=JJ+1
      JJJX=IX(JJJ)
      IF(JJX.GE.JJJX) GOTO 18
      IF(JX.GE.JJJX) GOTO 12
      IX(J)=JJJX
      J=JJJ
      JJ=J*2
      GOTO 15
   17 JJX=IX(JJ)
   18 IF(JX.GE.JJX) GOTO 12
      IX(J)=JJX
      J=JJ
      JJ=J*2
      GOTO 15
      END
C
      SUBROUTINE CLORD(MM,LEVMAX,ICLASS,IX)
C ORDERS SAMPLES IN ORDER OF CLASSIFICATION IN ICLASS, MAKING
C ALLOWANCES FOR DIFFERING LEVELS OF DIVISION
      INTEGER ICLASS(MM),IX(MM)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      IEND=2**(LEVMAX+2)
      IBIG=10000
      DO 10 II=1,MM
      IC=ICLASS(II)
      IF(IC.EQ.0) GOTO 7
    5 IC=IC*2
      IF(IC.LT.IEND) GOTO 5
      IX(II)=IBIG*IC+II
      GOTO 10
    7 IX(II)=II
   10 CONTINUE
      CALL ISORT(IX,MM)
      DO 12 II=1,MM
      IC=IX(II)
   12 IX(II)=IC-(IC/IBIG)*IBIG
      RETURN
      END
C
      SUBROUTINE JORDER(M,N,NDAT,IDAT,IADDR,
     1JORD,IY,IIY)
C ORDERS DATA MATRIX WITHIN SAMPLES SO AS TO ACCORD WITH A
C SPECIFIED ORDER JORD.  ADDRESSES OF BEGINNING OF EACH
C SAMPLE ARE STORED IN IADDR(I).  NOTE THAT QUANTITATIVE
C DATA IN EXCESS OF 10000 ARE DISALLOWED.
      INTEGER IDAT(NDAT),IADDR(M),JORD(N),IY(N),IIY(N)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      IBIG=10000
      DO 10 J=1,N
      JJ=JORD(J)
   10 IY(JJ)=J
      ID=1
      DO 50 I=1,M
      IJ=0
      IADDR(I)=ID
   24 J=IDAT(ID)
      ID=ID+1
      IF(J.EQ.-1) GOTO 26
      JJ=IY(J)*IBIG
      JJQ=IDAT(ID)
      ID=ID+1
      JJ=JJ+JJQ
      IJ=IJ+1
      IIY(IJ)=JJ
      GOTO 24
   26 IF(IJ.EQ.0) GOTO 50
      CALL ISORT(IIY,IJ)
      ID=IADDR(I)
      DO 40 IIJ=1,IJ
      JJ=IIY(IIJ)
      J=JJ/IBIG
      IDAT(ID)=JORD(J)
      ID=ID+1
      JJQ=JJ-J*IBIG
      IDAT(ID)=JJQ
      ID=ID+1
   40 CONTINUE
      ID=ID+1
   50 CONTINUE
      RETURN
      END
C
      SUBROUTINE TABOUT(M,N,IMIN,IMAX,JMIN,JMAX,NDAT,
     1IDAT,IADDR,IORD,JORD,INFLAG,
     2JNFLAG,JNAME1,JNAME2,ICLASS,JCLASS)
C PRINTS OUT ROWS AND COLUMNS OF MATRIX IN ARBITRARY
C ORDERS IORD,JORD (BUT NOTE THAT ROWS ARE ASSUMED TO BE
C ALREADY ORDERED INTERNALLY BY JORD).  THE MATRIX IS
C TRANSPOSED FOR PRINTING OUT, AS IS CONVENTIONAL IN
C PHYTOSOCIOLOGY.  THE LIMITS IMIN ETC ARE THE LIMITS
C OUTSIDE WHICH MATRIX IS NOT PRINTED.
C---Changed ITEM & IOUT to CHARACTER: P.Minchin June 1997
      INTEGER IDAT(NDAT),IADDR(M),IORD(M),JORD(N)
      CHARACTER ITEM(200)*4,IOUT(10)*1
C---Declare function I2CHAR to be CHARACTER*4: P.Minchin June 1997
      CHARACTER*4 I2CHAR
C---Changed BLANK,STAR,DASH to CHARACTER: P.Minchin June 1997
      CHARACTER*1 BLANK,STAR,DASH
C---Changed JNAME to CHARACTER: P.Minchin June 1997
      INTEGER INFLAG(M),JNFLAG(N)
      CHARACTER*4 JNAME1(N),JNAME2(N)
      INTEGER ICLASS(M),JCLASS(N)
      COMMON/WORK/ITEM
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      DATA BLANK/' '/,STAR/'*'/
      DATA DASH/'-'/
      DATA IOUT/'0','1','2','3','4','5','6','7','8','9'/
      DO 10 I=1,200
   10 ITEM(I)=BLANK
C---Next line commented out by P.Minchin June 1997
C      NNAME=BLANK
      WRITE (IUOUT2,1002)
 1002 FORMAT('1')
      DO 30 IL=1,4
      IDIV=10**(4-IL)
      III=2
      DO 20 I=IMIN,IMAX
      III=III+1
      II=IORD(I)
      IORIG=INFLAG(II)
      IR=IORIG/IDIV
      IF(IR.GE.1) ITEM(III)=IOUT(IR-(IR/10)*10+1)
   20 CONTINUE
   30 WRITE (IUOUT2,1000) (ITEM(II),II=1,III)
      WRITE (IUOUT2,1001)
 1001 FORMAT(1X)
      IF(JMAX.LT.JMIN) RETURN
      DO 110 J=JMIN,JMAX
      JJ=JORD(J)
      CALL BIN(ITEM,JCLASS(JJ))
      DO 90 II=1,6
   90 ITEM(150+II)=ITEM(1+II)
      ITEM(1)=I2CHAR(JNFLAG(JJ))
      ITEM(2)=JNAME1(JJ)
      ITEM(3)=JNAME2(JJ)
      III=3
      DO 100 I=IMIN,IMAX
      II=IORD(I)
      ID=IADDR(II)
   93 JJJ=IDAT(ID)
      IF(JJJ.NE.JJ) GOTO 98
      ID=ID+1
      JQ=IDAT(ID)
      ID=ID+1
      IADDR(II)=ID
      III=III+1
      IF(JQ.GE.10) GOTO 96
      ITEM(III)=IOUT(JQ+1)
      GOTO 100
   96 ITEM(III)=STAR
      GOTO 100
   98 III=III+1
      ITEM(III)=DASH
  100 CONTINUE
      III=III+1
      ITEM(III)=BLANK
      III=III+1
      ITEM(III)=BLANK
      DO 105 II=1,6
      III=III+1
  105 ITEM(III)=ITEM(150+II)
      WRITE (IUOUT2,2000) (ITEM(II),II=1,III)
 1000 FORMAT(1X,5X,A4,1X,A4,2X,108A1)
C---Format modified by P.Minchin June 1997
C 2000 FORMAT(1X,I4,1X,A4,1X,A4,2X,108A1)
 2000 FORMAT(1X,A4,1X,A4,1X,A4,2X,108A1)
  110 CONTINUE
      WRITE (IUOUT2,1001)
      ITEM(49)=BLANK
      ITEM(50)=BLANK
      DO 220 LEVEL=1,6
      III=50
      DO 210 I=IMIN,IMAX
      II=IORD(I)
      IC=ICLASS(II)
      CALL BIN(ITEM,IC)
      III=III+1
  210 ITEM(III)=ITEM(1+LEVEL)
      WRITE (IUOUT2,1000) (ITEM(II),II=49,III)
  220 CONTINUE
      RETURN
      END
C
C---Function added P.Minchin June 1997
      CHARACTER*4 FUNCTION I2CHAR (I)
C---Converts an integer value to a CHARACTER string
      CHARACTER*4 TEMP
      WRITE (TEMP,1000) I
 1000 FORMAT (I4)
      I2CHAR=TEMP
      RETURN
      END
C
      SUBROUTINE PSEUDO(MM,NN,NMAX,NL,NDAT,NSPEC,IDAT,LCUT,
     1JNFLAG,JNAME1,JNAME2,JNAM,INDPOT,IIY)
C SETS UP PSEUDOSPECIES DATA IN IDAT, AND ALSO VECTOR INDPOT,
C WHICH STORES THE REAL SPECIES NUMBERS CORRESPONDING TO THE
C PSEUDOSPECIES.  PSEUDOSPECIES CUT LEVELS ARE IN LCUT.
C SPECIES NAMES IN JNAME1,2.  JNAM STORES LEVELS OF PSEUDOSPECIES.
C---Changed JNAME to CHARACTER: P.Minchin June 1997
      INTEGER JTOP(10),IDAT(NDAT),LCUT(NL),
     1JNFLAG(NMAX),JNAM(NMAX),INDPOT(NMAX),IIY(NMAX)
      CHARACTER*4 JNAME1(NMAX),JNAME2(NMAX)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      IBIG=50000
      ID=0
      IDMAX=0
      DO 20 II=1,MM
   15 ID=ID+1
      IDMAX=IDMAX+1
      J=IDAT(ID)
      IF(J.EQ.-1) GOTO 20
      ID=ID+1
      JQ=IDAT(ID)
      JJQ=0
      DO 16 IL=1,NL
      IF(JQ.GE.LCUT(IL))JJQ=JJQ+1
   16 CONTINUE
      IDAT(ID)=JJQ
      IDMAX=IDMAX+JJQ-1
      GOTO 15
   20 CONTINUE
      IF(IDMAX.LE.NDAT) GOTO 40
      IDMAX=IDMAX+50
      WRITE (IUOUT2,1001) IDMAX
      WRITE (IUOUT1,1001) IDMAX
 1001 FORMAT(1X,'***ERROR***  DATA ARRAY NEEDS',I6,' ELEMENTS')
      STOP
   40 IID=NDAT
   80 IDAT(IID)=IDAT(ID)
      ID=ID-1
      IID=IID-1
      IF(ID.GT.0) GOTO 80
      DO 90 II=1,MM
      JJJ=0
   84 IID=IID+1
      J=IDAT(IID)
      IF(J.EQ.-1) GOTO 87
      IID=IID+1
      JJQ=IDAT(IID)
      IF(JJQ.EQ.0) GOTO 84
      DO 86 JQ=1,JJQ
      JJJ=JJJ+1
   86 IIY(JJJ)=J+IBIG*(JQ-1)
      GOTO 84
   87 DO 88 JJ=1,JJJ
      ID=ID+1
   88 IDAT(ID)=IIY(JJ)
      ID=ID+1
      IDAT(ID)=-1
      IF(ID.LE.IID) GOTO 90
      IDMAX=IDMAX+300
      WRITE (IUOUT2,1001) IDMAX
      STOP
   90 CONTINUE
C WE NOW HAVE THE DESIRED INFORMATION IN IDAT.  ALL WE HAVE
C TO DO IS TO CONDENSE THE NUMBERING
      IP=0
      DO 140 IL=1,NL
      DO 100 JJJ=1,NSPEC
  100 IIY(JJJ)=0
      ID=0
      DO 110 II=1,MM
  103 ID=ID+1
      JJJ=IDAT(ID)
      IF(JJJ.EQ.-1) GOTO 110
      IF(JJJ.GE.IBIG) GOTO 103
      IF(JJJ.LT.-1) GOTO 103
      IIY(JJJ)=IIY(JJJ)+1
      GOTO 103
  110 CONTINUE
      DO 120 JJJ=1,NSPEC
      IF(IIY(JJJ).EQ.0) GOTO 120
      IP=IP+1
      IF(IP.LE.NMAX) INDPOT(IP)=JJJ
      IIY(JJJ)=IP
  120 CONTINUE
      ID=0
      DO 130 II=1,MM
  123 ID=ID+1
      JJJ=IDAT(ID)
      IF(JJJ.EQ.-1) GOTO 130
      IF(JJJ.GE.IBIG) GOTO 127
      IF(JJJ.LT.-1) GOTO 123
      JJJ=IIY(JJJ)
  127 IDAT(ID)=JJJ-IBIG
      GOTO 123
  130 CONTINUE
      JTOP(IL)=IP
  140 CONTINUE
      ID=0
      DO 150 II=1,MM
  145 ID=ID+1
      JJ=IDAT(ID)
      IF(JJ.EQ.-1) GOTO 150
      IDAT(ID)=JJ+IBIG
      GOTO 145
  150 CONTINUE
      WRITE (IUOUT2,1002) ID
      WRITE (IUOUT1,1002) ID
 1002 FORMAT(//1X,'LENGTH OF DATA ARRAY AFTER DEFINING PSEUDOSPECIES',
     1I7)
      IF(ID*2.GT.NDAT) WRITE (IUOUT2,1003) NDAT
      IF(ID*2.GT.NDAT) WRITE (IUOUT1,1003) NDAT
 1003 FORMAT(1X,'*** BEWARE ***  THIS EXCEEDS ONE-HALF LENGTH OF',
     1' DATA ARRAY (=',I6,')'/
     21X,'NO SPECIES CLASSIFICATION CAN BE PERFORMED')
      NN=IP
      IF(NN.LE.NMAX) GOTO 155
      WRITE (IUOUT2,1000) NN
      WRITE (IUOUT1,1000) NN
 1000 FORMAT(1X,'***ERROR*** - NEEDS DIMENSIONING FOR',I6,
     1'  PSEUDOSPECIES')
      STOP
  155 NSPEC=JTOP(1)
      WRITE (IUOUT2,1004) NN
      WRITE (IUOUT1,1004) NN
 1004 FORMAT(//1X,'TOTAL NUMBER OF SPECIES AND PSEUDOSPECIES',I7)
      WRITE (IUOUT2,1005) NSPEC
      WRITE (IUOUT1,1005) NSPEC
 1005 FORMAT(//1X,'NUMBER OF SPECIES, EXCLUDING PSEUDOSPECIES ',
     1'AND ONES WITH NO OCCURRENCES',I5)
      DO 160 JJ=1,NSPEC
      J=INDPOT(JJ)
      IIY(J)=JJ
      JNFLAG(JJ)=JNFLAG(J)
      JNAME1(JJ)=JNAME1(J)
  160 JNAME2(JJ)=JNAME2(J)
      DO 170 JJ=1,NN
      J=INDPOT(JJ)
  170 INDPOT(JJ)=IIY(J)
      JJJ=2
      IL=0
      DO 180 JJ=1,NN
      J=IABS(INDPOT(JJ))
      JNFLAG(JJ)=JNFLAG(J)
      JNAME1(JJ)=JNAME1(J)
      JNAME2(JJ)=JNAME2(J)
      IF(J.LE.JJJ) IL=IL+1
      JNAM(JJ)=IL
  180 JJJ=J
      RETURN
      END
C
      SUBROUTINE CLASS(MM,NN,NDAT,MIND,MMZ,MMS,IX,ICLASS,
     1IIROW,IADDR,INDPOT,INDORD,IZONE,IY,JJCOL,IDAT,
     2INDSIG,IPICT,X,XX,RTOT,RRWT,ROWWGT,Y,YY,CTOT,CCWT,
     3COLWGT,INAME1,INAME2,JNAME1,JNAME2,JNAM,X3,X4,X5,LIND,
     4INFLAG,IPUNCH)
C THIS DOES THE CLASSIFICATION.  IF ISEC.EQ.2 IT DOES A SPECIES
C CLASSIFICATION, PRINTING OUT LESS INFORMATION THAN IN THE CASE WHERE
C ISEC.EQ.1.
      INTEGER IX(MM),ICLASS(MM),IIROW(MM),IADDR(MM),INFLAG(MM),
     1INDPOT(NN),INDORD(NN),IZONE(MM),IY(NN),
     2JJCOL(NN),IDAT(NDAT),INDSIG(MMS),
     3IPICT(MMZ,MMS)
C---Changed ITEM, PLUS, MINUS to CHARACTER: P.Minchin 1997
      CHARACTER ITEM(200)*4, PLUS*1, MINUS*1
      INTEGER LIND(10)
C---Changed INAME, JNAME to CHARACTER: P.Minchin 1997
      INTEGER JNAM(NN)
      CHARACTER*4 INAME1(MM),INAME2(MM),JNAME1(NN),JNAME2(NN)
C---Declare function I2CHAR to be CHARACTER*4: P.Minchin June 1997
      CHARACTER*4 I2CHAR
      REAL X(MM),XX(MM),RTOT(MM),RRWT(MM),ROWWGT(MM),Y(NN),YY(NN),
     1CTOT(NN),CCWT(NN),COLWGT(NN)
      REAL X3(MM),X4(MM),X5(MM)
      COMMON/WORK/ITEM
      COMMON/PICT/MZ,MS,IZD,IIZD,ISD,ISHIFT,MZIND,
     1MZCRIT,MZOUT,NIND
C---Variable PRECIS added P.Minchin  June 1997
      COMMON/LIMS/RARE,FEEBLE,FRQLIM,TOL,RATLIM,REPLIM,PRECIS
      COMMON/SECOND/ISEC
      COMMON/SWITCH/IFAIL,IDIAGR,ISTOP,IREWT
      COMMON/IARBS/ICWEXP,IEND,MMIN,IPREXP,LEVMAX
      COMMON/ARBS/CWTMIN,CRLONG,CRCUT
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      DATA PLUS/'+'/,MINUS/'-'/
      JLEV=0
      IC=1
      LEVEL=1
      ISTOP=0
      IEND=2**(LEVMAX+2)
      ID=1
      DO 5 II=1,MM
      IADDR(II)=ID
    4 JJ=IDAT(ID)
      ID=ID+1
      IF(JJ.EQ.-1) GOTO 5
      GOTO 4
    5 CONTINUE
      DO 10 II=1,MM
   10 ICLASS(II)=IC
      DO 15 II=1,MM
      ID=IADDR(II)
      IF(IDAT(ID).EQ.-1) ICLASS(II)=IEND
   15 CONTINUE
      GOTO 30
   20 CALL DECODE(M,MM,N,NN,NDAT,IIROW,IADDR,IDAT,JJCOL)
      CALL UPDATE(M,MM,IC,LEVEL,ICLASS,IIROW,IX)
      IF(IPUNCH.EQ.0) GO TO 21
C      IF(ISEC.EQ.2.AND.IPUNCH.EQ.1) GO TO 21
      KLEV=LEVEL - 1
      IF(KLEV.EQ.JLEV) GO TO 21
      JLEV=KLEV
      IF(ISEC.EQ.1) WRITE (IUOUT3,1021) JLEV
 1021 FORMAT('TWINSPAN QUADRAT CLASSIFICATION LEVEL ',I3)
      IF(ISEC.EQ.2) WRITE (IUOUT3,1022) JLEV
 1022 FORMAT('TWINSPAN SPECIES CLASSIFICATION LEVEL ',I3)
      WRITE (IUOUT3,1023) (ICLASS(II),II=1,MM)
 1023 FORMAT(26I3)
   21 CONTINUE
      IF(ISTOP.EQ.1) GOTO 500
   30 CALL RECODE(M,MM,N,NN,NDAT,IC,ICLASS,IIROW,JJCOL,IADDR,IDAT)
      CALL BIN(ITEM,IC)
      WRITE (IUOUT2,1010)
 1010 FORMAT(1X,30('****'))
      WRITE (IUOUT2,1000) IC,M,(ITEM(IT),IT=1,30)
      WRITE (IUOUT1,1000) IC,M,(ITEM(IT),IT=1,30)
 1000 FORMAT('0DIVISION',I5,'  (N=',I4,')',
     19X,'I.E. GROUP ',30A1)
      IF(M.GE.MMIN) GOTO 40
      WRITE (IUOUT2,1001)
 1001 FORMAT(' DIVISION FAILS - THERE ARE TOO FEW ITEMS')
      IFAIL=1
      GOTO 20
   40 CALL WEIGHT(M,MM,N,NN,NDAT,X,Y,IIROW,IADDR,
     1RRWT,ROWWGT,JJCOL,CCWT,COLWGT,IDAT)
      CALL RA(M,MM,N,NN,NDAT,EIG,X,XX,X3,X4,X5,Y,RTOT,
     1CTOT,IIROW,IADDR,ROWWGT,COLWGT,IDAT)
      IF (IFAIL.EQ.1) GOTO 20
      CALL XMAXMI(X,AXMAX,AXMIN,M)
      IF (AXMAX.GT.-AXMIN) GOTO 45
      DO 44 I=1,M
   44 X(I)=-X(I)
      AX=AXMAX
      AXMAX=-AXMIN
      AXMIN=-AX
   45 CRMIN=AXMIN*CRLONG
      CRMAX=AXMAX*CRLONG
      CRMID=0.5*(CRMIN+CRMAX)
      CRHALF=0.5*(CRMAX-CRMIN)
      IF(IREWT.EQ.0) GOTO 48
      DO 47 IRE=1,IREWT
      DO 46 I=1,M
      AX=(X(I)-CRMID)/CRHALF
      IF(AX.GT.1.0) AX=1.0
      IF(AX.LT.-1.0) AX=-1.0
   46 XX(I)=AX
      CALL POLISH(M,MM,N,NN,NDAT,X,XX,Y,YY,IIROW,JJCOL,RTOT,
     1ROWWGT,CCWT,COLWGT,IADDR,IDAT)
      CALL XMAXMI(X,AXMAX,AXMIN,M)
      CRMID=0.5*(AXMIN+AXMAX)
      CRHALF=0.5*CRLONG*(AXMAX-AXMIN)
      CRMIN=CRMID-CRHALF
   47 CRMAX=CRMID+CRHALF
   48 IF(IC.EQ.1) GOTO 63
C WE NOW FIND OUT WHICH OF THE DERIVED GROUPS MORE CLOSELY RESEMBLES
C THE BROTHER OF THE GROUP THAT HAS JUST BEEN DIVIDED
C TO DO THIS WE REQUIRE SPECIES TOTALS (IGNORING PSEUDOSPECIES WEIGHTS)
      SMALL=1.0E-7
      DO 49 JJ=1,NN
      Y(JJ)=SMALL
   49 YY(JJ)=SMALL
      TOT0=0.0
      TOT1=0.0
      DO 52 I=1,M
      II=IIROW(I)
      ID=IADDR(II)
      IF(X(I).GE.CRMID) TOT1=TOT1+RRWT(II)
      IF(X(I).LE.CRMID) TOT0=TOT0+RRWT(II)
   51 J=IDAT(ID)
      ID=ID+1
      IF(J.EQ.-1) GOTO 52
      JJ=JJCOL(J)
      JJJ=IABS(INDPOT(JJ))
      IF(X(I).GE.CRMID) YY(JJJ)=YY(JJJ)+RRWT(II)*CCWT(JJ)
      IF(X(I).LE.CRMID) Y(JJJ)=Y(JJJ)+RRWT(II)*CCWT(JJ)
      GOTO 51
   52 CONTINUE
      IIC=IC+1
      IF(IIC.EQ.(IIC/2)*2)  IIC=IIC-2
      CALL CLOSER(YSCOR1,IIC,MM,N,NN,NDAT,IEND,TOT0,TOT1,
     1IDAT,ICLASS,IADDR,INDPOT,JJCOL,RRWT,CCWT,COLWGT,Y,YY)
      IIIIC=IC/2+1
      IF(IIIIC.EQ.(IIIIC/2)*2) IIIIC=IIIIC-2
      YSCOR2=0.0
      IF(IC.LE.3) GOTO 54
      CALL CLOSER(YSCOR2,IIIIC,MM,N,NN,NDAT,IEND,TOT0,TOT1,
     1IDAT,ICLASS,IADDR,INDPOT,JJCOL,RRWT,CCWT,COLWGT,Y,YY)
   54 IW=IC-(IC/4)*4
      W=0.5
      IF(IW.EQ.1.OR.IW.EQ.2) W=-W
      YSCORE=YSCOR1+W*YSCOR2
      IF(IIC.NE.(IIC/2)*2) GOTO 559
C IIC IS EVEN, SO WE WANT THE NEGATIVE GROUP TO BE CLOSER TO IT
      IF (YSCORE.LE.0) GOTO 63
      GOTO 60
C IN THIS CASE IIC IS ODD
  559 IF (YSCORE.GE.0) GOTO 63
   60 DO 61 I=1,M
   61 X(I)=-X(I)
      AX=AXMAX
      AXMAX=-AXMIN
      AXMIN=-AX
      AX=CRMAX
      CRMAX=-CRMIN
      CRMIN=-AX
      CRMID=-CRMID
   63 CALL ZONEUP(X,AXMIN,CRMIN,CRMAX,AXMAX,M,MZ,MZOUT,MZCRIT,IZONE)
      IF (MIND.EQ.0) GOTO 100
      CUT1=CRMID-0.5*(CRMAX-CRMIN)*FLOAT(MZIND)/(FLOAT(MZCRIT)+0.001)
      CUT2=2.0*CRMID-CUT1
      CALL INDSCO(M,MM,N,NN,NDAT,X,AXPOS,AXNEG,
     1CUT1,CUT2,Y,YY,IIROW,ROWWGT,IADDR,IDAT)
      DO 65 J=1,N
   65 Y(J)=YY(J)/AXPOS-Y(J)/AXNEG
C---Argument PRECIS added by P.Minchin June 1997
      CALL TOPIND(N,NN,MIND,FEEBLE,Y,INDORD,INDSIG,
     1JJCOL,INDPOT,JNAM,NIND,LIND,PRECIS)
      IF(NIND.EQ.0) GOTO 100
      MIS=10000
      CALL CODESC(M,MM,N,NN,NDAT,NIND,INDORD,IX,IY,IIROW,IADDR,IDAT)
C NOW FIND BEST NUMBER OF INDICATORS AND BEST DIVISION POINT
      DO 70 IIND=1,NIND
      CALL TABLE(M,MMZ,MMS,MIND,IX,IZONE,INDSIG,IPICT,0,IIND)
      CALL FIND(MMZ,MMS,IPICT,IZD1,ISD1,MISCL)
      IF(MISCL.GE.MIS)GOTO 70
      MIS=MISCL
      ISD=ISD1
      IZD=IZD1
      IIZD=IZD-MZIND
      IND=IIND
   70 CONTINUE
      CALL TABLE(M,MMZ,MMS,MIND,IX,IZONE,INDSIG,IPICT,1,IND)
      WRITE (IUOUT2,1003)
 1003 FORMAT(1X,'INDICATORS, TOGETHER WITH THEIR SIGN')
      IT=0
      DO 80 IIND=1,IND
      J=INDORD(IIND)
      JJ=JJCOL(J)
      IT=IT+1
      ITEM(IT)=JNAME1(JJ)
      IT=IT+1
      ITEM(IT)=JNAME2(JJ)
      IT=IT+1
C---Convert values of JNAM to CHARACTER: P.Minchin June 1997
      ITEM(IT)=I2CHAR(JNAM(JJ))
      ITEM(IT)=ITEM(IT)(4:4)
      IT=IT+1
      IF(INDSIG(IIND).GT.0) GOTO 75
      ITEM(IT)=MINUS
      GOTO 80
   75 ITEM(IT)=PLUS
   80 CONTINUE
      WRITE (IUOUT2,1004) (ITEM(IIT),IIT=1,IT)
C---Altered format: P.Minchin June 1997
C 1004 FORMAT((1X,7(A4,1X,A4,I1,'(',A1,')',3X)))
 1004 FORMAT((1X,7(A4,1X,A4,A1,'(',A1,')',3X)))
      GOTO 120
  100 DO 110 I=1,M
  110 IX(I)=0
      MS=1
      IZD=(1+MZ)/2
      IIZD=IZD
      ISD=0
      IF(MIND.EQ.0) NIND=0
      IF(MIND.NE.0) WRITE (IUOUT2,1006)
 1006 FORMAT(1X,'(NO INDICATORS)')
  120 CALL REPORT(M,MM,N,NN,NDAT,MMZ,MMS,IC,X,XX,ROWWGT,
     1Y,YY,COLWGT,IX,IZONE,IIROW,IY,JJCOL,IADDR,IDAT,IPICT,
     2INAME1,INAME2,JNAME1,JNAME2,JNAM)
      DO 130 I=1,M
      AX=X(I)
      IF(AX.GT.3.5) IX(I)=1
      IF(AX.LT.3.5) IX(I)=0
  130 CONTINUE
      GOTO 20
  500 WRITE (IUOUT2,1010)
      IF(IPUNCH.EQ.0) GO TO 560
C     NUMBER=0
C     DO 510 II=1,MM
C     IF(ICLASS(II).NE.0) NUMBER=NUMBER+1
C 510 CONTINUE
C     WRITE(7,1020) NUMBER
C1020 FORMAT(1X,'THERE ARE',I6,'  ITEMS')
C     DO 550 II=1,MM
C     IC=ICLASS(II)
C     IF(IC.EQ.0) GOTO 550
C     CALL BIN(ITEM,IC)
C     IF(ISEC.EQ.2) GOTO 530
C     WRITE(7,1030) INFLAG(II),INAME1(II),INAME2(II),IC,
C    1(ITEM(IT),IT=1,30)
C     GOTO 550
C 530 WRITE(7,1040) INFLAG(II),INAME1(II),INAME2(II),IC,
C    1(ITEM(IT),IT=1,30)
C1030 FORMAT(1X,I4,1X,2A4,I7,3X,30A1)
C1040 FORMAT(1X,I4,1X,A4,1X,A4,I6,3X,30A1)
C 550 CONTINUE
  560 RETURN
      END
C
      SUBROUTINE CLOSER(YSCORE,IIC,MM,N,NN,NDAT,IEND,TOT0,TOT1,
     1IDAT,ICLASS,IADDR,INDPOT,JJCOL,RRWT,CCWT,Y,Y0,Y1)
C OBTAINS A QUANTITY YSCORE, TO DETERMINE WHICH ORDER THE TWO HALVES
C OF DIVISION SHOULD BE PUT IN.  IF YSCORE IS NEGATIVE, THEN GROUP
C IIC MORE CLOSELY RESEMBLES THE NEGATIVE SIDE OF DIVISION, AND
C VICE VERSA IF YSCORE IS POSITIVE.
      INTEGER IDAT(NDAT),IADDR(MM),ICLASS(MM),INDPOT(NN),JJCOL(NN)
      REAL RRWT(MM),CCWT(NN),Y(NN),Y0(NN),Y1(NN)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      TOT=0.0
      DO 50 JJ=1,NN
   50 Y(JJ)=1.0E-7
      DO 54 II=1,MM
      IIIC=ICLASS(II)
      IF(IIIC.GT.IEND) IIIC=IIIC-IEND
      IF(IIIC.NE.IIC.AND.IIIC/2.NE.IIC.AND.IIIC/4.NE.IIC) GOTO 54
      ID=IADDR(II)
      TOT=TOT+RRWT(II)
   53 JJ=IDAT(ID)
      ID=ID+1
      IF(JJ.EQ.-1) GOTO 54
      JJJ=IABS(INDPOT(JJ))
      Y(JJJ)=Y(JJJ)+RRWT(II)*CCWT(JJ)
      GOTO 53
   54 CONTINUE
      YNEG=0.0
      YIND=0.0
      YPOS=0.0
      X1NEG=0.0
      X1IND=0.0
      X1POS=0.0
      X0NEG=0.0
      X0IND=0.0
      X0POS=0.0
      DO 57 J=1,N
      JJ=JJCOL(J)
      JJJ=IABS(INDPOT(JJ))
      IF(JJ.NE.JJJ) GOTO 57
      AY=Y(JJ)/TOT
      AY0=Y0(JJJ)/TOT0
      AY1=Y1(JJJ)/TOT1
      PREF=ABS(AY0-AY1)/(AY0+AY1)
      PREF=PREF/0.3
      IF(PREF.GT.1.0) PREF=1.0
      PREF=PREF*PREF*PREF*PREF
      IF(AY1.GT.AY0) GOTO 55
      PNEG=PREF
      PIND=(1.0-PREF)
      PPOS=0.0
      GOTO 56
   55 PNEG=0.0
      PIND=(1.0-PREF)
      PPOS=PREF
   56 YNEG=YNEG+PNEG*AY
      YIND=YIND+PIND*AY
      YPOS=YPOS+PPOS*AY
      X0NEG=X0NEG+PNEG*AY0
      X1NEG=X1NEG+PNEG*AY1
      X0IND=X0IND+PIND*AY0
      X1IND=X1IND+PIND*AY1
      X0POS=X0POS+PPOS*AY0
      X1POS=X1POS+PPOS*AY1
   57 CONTINUE
      XNEG=X0NEG+X1NEG
      XIND=X0IND+X1IND
      XPOS=X0POS+X1POS
      IF(XPOS.GT.XNEG)GOTO 58
      IF(XIND.LE.(XNEG-XPOS)) GOTO 59
      YIND=YIND*(XNEG-XPOS)/XIND
      GOTO 59
   58 YIND=-YIND
      XIND=-XIND
      IF(-XIND.LE.(XPOS-XNEG)) GOTO 59
      YIND=YIND*(XPOS-XNEG)/(-XIND)
   59 YSCORE=YPOS-YNEG+YIND
      YSCORE=YSCORE*TOT
      RETURN
      END
C
      SUBROUTINE DECODE(M,MM,N,NN,NDAT,IIROW,IADDR,IDAT,JJCOL)
C GOES THROUGH ROWS OF SUBMATRIX, BACKTRANSLATING J TO JJ, I.E.
C RETURNING TO COLUMN NUMBERING IN FULL MATRIX.
      INTEGER IIROW(M),IADDR(MM),IDAT(NDAT),JJCOL(N)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      DO 10 I=1,M
      II=IIROW(I)
      ID=IADDR(II)
    5 J=IDAT(ID)
      IF(J.EQ.-1) GOTO 10
      IDAT(ID)=JJCOL(J)
      ID=ID+1
      GOTO 5
   10 CONTINUE
      RETURN
      END
C
      SUBROUTINE UPDATE(M,MM,IC,LEVEL,ICLASS,IIROW,IX)
C UPDATES CLASSIFICATION;  IF DIVISION HAS FAILED, ADDS IEND TO
C CLASS NUMBER IC;  FINDS NEW CLASS IC TO BE DIVIDED.
      INTEGER ICLASS(MM),IIROW(M),IX(M)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      COMMON/IARBS/ICWEXP,IEND,MMIN,IPREXP,LEVMAX
      COMMON/SWITCH/IFAIL,IDIAGR,ISTOP,IREWT
      IF(IFAIL.EQ.0) GOTO 20
      DO 10 I=1,M
      II=IIROW(I)
   10 ICLASS(II)=ICLASS(II)+IEND
      GOTO 40
C WE NOW APPLY THE DIVISION HELD IN IX(I) (=0 OR 1), AND UPDATE
C THE CLASS REGISTER FOR THE ROWS
   20 DO 30 I=1,M
      II=IIROW(I)
   30 ICLASS(II)=ICLASS(II)*2+IX(I)
C WE NOW FIND THE NEXT CLASS TO BE DIVIDED AND SET ISTOP=1 IF
C WE HAVE COME TO THE END OF THE DIVISIONS
   40 IC=IEND
      DO 50 II=1,MM
      IIC=ICLASS(II)
      IF(IIC.LT.IC)IC=IIC
   50 CONTINUE
      IF(IC.GE.IEND) GOTO 60
      IF(2**LEVEL.GT.IC)GOTO 80
      WRITE (IUOUT2,1000) LEVEL
 1000 FORMAT('0   END OF LEVEL',I4,//)
      LEVEL=LEVEL+1
      IF (LEVEL.LE.LEVMAX) GOTO 80
   60 ISTOP=1
      WRITE (IUOUT2,1001)
 1001 FORMAT('0THIS IS THE END OF THE DIVISIONS REQUESTED')
      DO 70 II=1,MM
      IC=ICLASS(II)
      IF(IC.GE.IEND)ICLASS(II)=IC-IEND
   70 CONTINUE
   80 RETURN
      END
C
      SUBROUTINE RECODE(M,MM,N,NN,NDAT,IC,ICLASS,IIROW,
     1JJCOL,IADDR,IDAT)
C GIVEN CLASS IC TO BE DIVIDED, CALCULATES M,N, THE NUMBERS OF
C ROWS AND COLUMNS IN SUBMATRIX DEFINED BY IC.  RENUMBERS THESE
C WITH CONSECUTIVE NUMBERING, SETTING UP TRANSLATION VECTORS
C IIROW,JJCOL, TO GET BACK TO OLD NUMBERING WHEN NECESSARY.
      INTEGER ICLASS(MM),IIROW(MM),JJCOL(NN),IADDR(MM),IDAT(NDAT)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      I=0
      DO 10 II=1,MM
      IF (ICLASS(II).NE.IC) GOTO 10
      I=I+1
      IIROW(I)=II
   10 CONTINUE
      M=I
      DO 20 JJ=1,NN
   20 JJCOL(JJ)=0
C NOW ACCUMULATE COLUMN TOTALS IN JJCOL
      DO 30 I=1,M
      II=IIROW(I)
      ID=IADDR(II)
   25 JJ=IDAT(ID)
      IF(JJ.EQ.-1) GOTO 30
      JJCOL(JJ)=JJCOL(JJ)+1
      ID=ID+1
      GOTO 25
   30 CONTINUE
      J=0
      DO 40 JJ=1,NN
      IF(JJCOL(JJ).EQ.0) GOTO 40
      J=J+1
      JJCOL(JJ)=J
   40 CONTINUE
      N=J
C NOW GO THROUGH THE MATRIX RECODING THE COLUMNS
      DO 50 I=1,M
      II=IIROW(I)
      ID=IADDR(II)
   45 JJ=IDAT(ID)
      IF(JJ.EQ.-1) GOTO 50
      IDAT(ID)=JJCOL(JJ)
      ID=ID+1
      GOTO 45
   50 CONTINUE
C NOW THE REVERSE CODING J TO JJ IS PUT IN JJCOL
      J=0
      DO 60 JJ=1,NN
      IF(JJCOL(JJ).EQ.0) GOTO 60
      J=J+1
      JJCOL(J)=JJ
   60 CONTINUE
      RETURN
      END
C
      SUBROUTINE BIN(ITEM,IC)
C CONVERTS CLASS NUMBER IC TO BINARY DIGITS, READY FOR PRINTING OUT
C---ITEM,BLANK,ZERO,ONE,STAR changed to CHARACTER: P.Minchin June 1997
      CHARACTER*4 ITEM(200)
      CHARACTER*1 BLANK,ZERO,ONE,STAR
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      DATA BLANK/' '/,ZERO/'0'/,ONE/'1'/,STAR/'*'/
      LEVEL=0
      IIC=1
   10 IF(IIC.GT.IC) GOTO 20
      IIC=IIC*2
      LEVEL=LEVEL+1
      GOTO 10
   20 DO 30 IT=1,30
   30 ITEM(IT)=BLANK
      IT=LEVEL
      IF(LEVEL.GT.30) IT=30
      IIC=IC
   40 IIIC=IIC/2
      IIC=IIC-2*IIIC
      IF(IIC.EQ.0)ITEM(IT)=ZERO
      IF(IIC.EQ.1)ITEM(IT)=ONE
      IIC=IIIC
      IT=IT-1
      IF(IT.GT.0) GOTO 40
      ITEM(1)=STAR
      RETURN
      END
C
      SUBROUTINE WEIGHT(M,MM,N,NN,NDAT,X,Y,IIROW,IADDR,RRWT,ROWWGT,
     1JJCOL,CCWT,COLWGT,IDAT)
C WEIGHTS COLUMNS ACCORDING TO HOW RARE THEY ARE.  THOSE RARER THAN
C A PROPORTION FRQLIM ARE DOWNWEIGHTED IN PROPORTION TO THEIR
C SHORTFALL FROM FRQLIM, RAISED TO THE POWER ICWEXP.  ROW-WEIGHTS
C FOR SUBMATRIX ARE PUT IN ROWWGT.
      REAL X(M),Y(N),RRWT(MM),ROWWGT(M),CCWT(NN),COLWGT(N)
      INTEGER IIROW(M),IADDR(MM),JJCOL(NN),IDAT(NDAT)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
C---Variable PRECIS added P.Minchin  June 1997
      COMMON/LIMS/RARE,FEEBLE,FRQLIM,TOL,RATLIM,REPLIM,PRECIS
      COMMON/IARBS/ICWEXP,IEND,MMIN,IPREXP,LEVMAX
      COMMON/ARBS/CWTMIN,CRLONG,CRCUT
      CWT=1.0-CWTMIN
      IF(FRQLIM.LT.1.0E-10)FRQLIM=1.0E-10
      DO 10 J=1,N
   10 COLWGT(J)=1.0
      TOT=0.0
      DO 20 I=1,M
      II=IIROW(I)
      RR=RRWT(II)
      ROWWGT(I)=RR
      TOT=TOT+RR
   20 X(I)=1.0
      CALL XYMULT(M,MM,N,NN,NDAT,X,Y,IIROW,IADDR,ROWWGT,
     1COLWGT,IDAT)
      DO 30 J=1,N
      JJ=JJCOL(J)
      AY=Y(J)/TOT
      IF(AY.GE.FRQLIM)AY=FRQLIM
      COLWGT(J)=CCWT(JJ)*((AY/FRQLIM)**ICWEXP*CWT+CWTMIN)
   30 CONTINUE
      RETURN
      END
C
      SUBROUTINE RA(M,MM,N,NN,NDAT,EIG,X,XX,X3,X4,X5,Y,
     1RTOT,CTOT,IIROW,IADDR,ROWWGT,COLWGT,IDAT)
C DOES RECIPROCAL AVERAGING, DERIVING EIGENVECTOR X AND EIGENVALUE
C EIG.  ROWWGT, COLWGT ARE ROW AND COLUMN WEIGHTS.  XX,X3,X4,X5,Y ARE
C WORKSPACE.
      REAL X(M),XX(M),Y(N),RTOT(M),CTOT(N),ROWWGT(M),COLWGT(N)
      REAL X3(M),X4(M),X5(M)
      INTEGER IIROW(M),IADDR(MM),IDAT(NDAT)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
C---Variable PRECIS added P.Minchin  June 1997
      COMMON/LIMS/RARE,FEEBLE,FRQLIM,TOL,RATLIM,REPLIM,PRECIS
      COMMON/SWITCH/IFAIL,IDIAGR,ISTOP,IREWT
      IFAIL=0
      DO 10 I=1,M
   10 XX(I)=1.0
      DO 20 J=1,N
   20 Y(J)=1.0
      CALL XYMULT(M,MM,N,NN,NDAT,XX,CTOT,IIROW,IADDR,ROWWGT,
     1COLWGT,IDAT)
      CALL YXMULT(M,MM,N,NN,NDAT,Y,RTOT,IIROW,IADDR,ROWWGT,
     1COLWGT,IDAT)
      TOT=0.0
      DO 30 J=1,N
   30 TOT=TOT+CTOT(J)
      DO 40 I=1,M
   40 X(I)=FLOAT(I)
      X(1)=1.1
C WE NOW HAVE TRIAL VECTOR X, DELIBERATELY MADE IRREGULAR TO AVOID
C NASTY COINCIDENCES
      TTOL=1.0E-5
      ICOUNT=0
      IITIM=0
   50 A=0.0
C FIRST CENTER TO ZERO MEAN AND UNIT LENGTH
      DO 60 I=1,M
   60 A=A+X(I)*RTOT(I)
      A=A/TOT
      EX=0.0
      DO 70 I=1,M
      AX=X(I)-A
      EX=EX+AX*AX*RTOT(I)
   70 X(I)=AX
      EX=SQRT(EX)
      DO 80 I=1,M
   80 X(I)=X(I)/EX
      A11=0.0
      A12=0.0
      A22=0.0
      A23=0.0
      A33=0.0
      A34=0.0
      A44=0.0
      B13=0.0
      B14=0.0
      B24=0.0
      CALL XYMULT(M,MM,N,NN,NDAT,X,Y,IIROW,
     1IADDR,ROWWGT,COLWGT,IDAT)
      DO 81 J=1,N
   81 Y(J)=Y(J)/CTOT(J)
      CALL YXMULT(M,MM,N,NN,NDAT,Y,XX,IIROW,
     1IADDR,ROWWGT,COLWGT,IDAT)
      A=0.0
      DO 82 I=1,M
      AX=XX(I)
      XX(I)=AX/RTOT(I)
      A=A+AX
   82 A11=A11+AX*X(I)
      IF(A11.GT.TTOL) GOTO 83
      IFAIL=1
      RETURN
   83 A=A/TOT
      DO 84 I=1,M
      AX=XX(I)-A-A11*X(I)
      A12=A12+AX*AX*RTOT(I)
   84 XX(I)=AX
      A12=SQRT(A12)
      DO 86 I=1,M
   86 XX(I)=XX(I)/A12
      IF(A12.LT.TOL) GOTO 200
C---Maximum iteration limit increased by P.Minchin Jan 1997
C      IF(ICOUNT.GT.5) GOTO 200
      IF(ICOUNT.GT.999) GOTO 200
      ICOUNT=ICOUNT+1
      CALL XYMULT(M,MM,N,NN,NDAT,XX,Y,IIROW,
     1IADDR,ROWWGT,COLWGT,IDAT)
      DO 91 J=1,N
   91 Y(J)=Y(J)/CTOT(J)
      CALL YXMULT(M,MM,N,NN,NDAT,Y,X3,IIROW,
     1IADDR,ROWWGT,COLWGT,IDAT)
      A=0.0
      DO 92 I=1,M
      AX=X3(I)
      X3(I)=AX/RTOT(I)
      A=A+AX
      A22=A22+AX*XX(I)
   92 B13=B13+AX*X(I)
      IF(A22.LT.TTOL) GOTO 120
      A=A/TOT
      DO 94 I=1,M
      AX=X3(I)-A-A22*XX(I)-B13*X(I)
      A23=A23+AX*AX*RTOT(I)
   94 X3(I)=AX
      A23=SQRT(A23)
      DO 96 I=1,M
   96 X3(I)=X3(I)/A23
      CALL XYMULT(M,MM,N,NN,NDAT,X3,Y,IIROW,
     1IADDR,ROWWGT,COLWGT,IDAT)
      DO 101 J=1,N
  101 Y(J)=Y(J)/CTOT(J)
      CALL YXMULT(M,MM,N,NN,NDAT,Y,X4,IIROW,
     1IADDR,ROWWGT,COLWGT,IDAT)
      A=0.0
      DO 102 I=1,M
      AX=X4(I)
      X4(I)=AX/RTOT(I)
      A=A+AX
      A33=A33+AX*X3(I)
      B14=B14+AX*X(I)
  102 B24=B24+AX*XX(I)
      IF(A33.LT.TTOL) GOTO 120
      A=A/TOT
      DO 104 I=1,M
      AX=X4(I)-(A+A33*X3(I)+B14*X(I)+B24*XX(I))
      A34=A34+AX*AX*RTOT(I)
  104 X4(I)=AX
      A34=SQRT(A34)
      DO 106 I=1,M
  106 X4(I)=X4(I)/A34
      CALL XYMULT(M,MM,N,NN,NDAT,X4,Y,IIROW,
     1IADDR,ROWWGT,COLWGT,IDAT)
      DO 111 J=1,N
  111 Y(J)=Y(J)/CTOT(J)
      CALL YXMULT(M,MM,N,NN,NDAT,Y,X5,IIROW,
     1IADDR,ROWWGT,COLWGT,IDAT)
      DO 112 I=1,M
  112 A44=A44+X4(I)*X5(I)
  120 AX1=1.0
      AX2=0.1
      AX3=0.01
      AX4=0.001
      DO 130 ITIMES=1,100
      AXX1=A11*AX1+A12*AX2
      AXX2=A12*AX1+A22*AX2+A23*AX3
      AXX3=A23*AX2+A33*AX3+A34*AX4
      AXX4=A34*AX3+A44*AX4
      AX1=A11*AXX1+A12*AXX2
      AX2=A12*AXX1+A22*AXX2+A23*AXX3
      AX3=A23*AXX2+A33*AXX3+A34*AXX4
      AX4=A34*AXX3+A44*AXX4
      EX=SQRT(AX1**2+AX2**2+AX3**2+AX4**2)
      AX1=AX1/EX
      AX2=AX2/EX
      AX3=AX3/EX
      AX4=AX4/EX
      IF(ITIMES.NE.(ITIMES/5)*5) GOTO 130
      EXX=SQRT(EX)
      RESI=SQRT((AX1-AXX1/EXX)**2+(AX2-AXX2/EXX)**2+
     1(AX3-AXX3/EXX)**2+(AX4-AXX4/EXX)**2)
      IF(RESI.LT.TOL*0.05) GOTO 135
  130 CONTINUE
  135 IITIM=IITIM+ITIMES
      DO 140 I=1,M
  140 X(I)=AX1*X(I)+AX2*XX(I)+AX3*X3(I)+AX4*X4(I)
      GOTO 50
  200 WRITE (IUOUT2,1000) A11,ICOUNT
 1000 FORMAT(1X,'EIGENVALUE',F6.3,'  AT ITERATION',I4)
      IF(A12.GT.TOL) WRITE (IUOUT2,1010) ICOUNT,A12,TOL
 1010 FORMAT(1X,'RA TROUBLE',I4,' ITERATIONS, AND RESIDUAL IS STILL ',
     1F6.3,'  INSTEAD OF ',F8.6,' (THE TOLERANCE)')
      EIG=A11
      RETURN
      END
C
      SUBROUTINE XMAXMI(X,AXMAX,AXMIN,M)
C CALCULATES MAXIMUM AND MINIMUM OF VECTOR X(M).
      REAL X(M)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      AXMAX=-1.0E10
      AXMIN=-AXMAX
      DO 10 I=1,M
      AX=X(I)
      IF(AX.GT.AXMAX)AXMAX=AX
      IF(AX.LT.AXMIN)AXMIN=AX
   10 CONTINUE
      RETURN
      END
C
      SUBROUTINE POLISH(M,MM,N,NN,NDAT,X,XX,Y,YY,
     1IIROW,JJCOL,RTOT,ROWWGT,CCWT,COLWGT,IADDR,IDAT)
C SUBROUTINE POLARIZES ORDINATION X SO THAT ORDINATION APPROXIMATES
C BETTER TO A CLASSIFICATION.  TO DO THIS, DERIVES TWO NEW
C ORDINATIONS, TAKES THEIR SUM, AND PUTS BACK IN X.
C ORDINATION 1 IS ADDITIVE, DERIVED BY ADDITNG PREFERENCE SCORES IN
C A SUMMATION IN WHICH ONLY GOOD (I.E. REASONABLY FREQUENT AND
C REASONABLY PREFERENTIAL) SPECIES ARE GIVEN APPRECIABLE WEIGHT.
C ORDINATION 2 TAKES THE MEAN PREFERENCE SCORE OF THE SPECIES IN
C EACH STAND, UNWEIGHTED EXCEPT FOR BASIC WEIGHTS CCWT.
      INTEGER IIROW(M),JJCOL(N),IADDR(MM),IDAT(NDAT)
      REAL X(M),XX(M),Y(N),YY(N),RTOT(M),ROWWGT(M),CCWT(NN),COLWGT(N)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
C---Variable PRECIS added P.Minchin  June 1997
      COMMON/LIMS/RARE,FEEBLE,FRQLIM,TOL,RATLIM,REPLIM,PRECIS
      COMMON/IARBS/ICWEXP,IEND,MMIN,IPREXP,LEVMAX
      COMMON/ARBS/CWTMIN,CRLONG,CRCUT
      CALL XMAXMI(X,AXMAX,AXMIN,M)
      CUTMID=(AXMAX+AXMIN)*0.5
      CUTHLF=(AXMAX-AXMIN)*0.5*CRCUT
      CUT1=CUTMID-CUTHLF
      CUT2=CUTMID+CUTHLF
      CALL INDSCO(M,MM,N,NN,NDAT,X,AXPOS,AXNEG,CUT1,CUT2,
     1Y,YY,IIROW,ROWWGT,IADDR,IDAT)
C PUT PREFERENCE SCORE IN YY AND CALCULATE APPROPRIATE COLUMN WEIGHTS
      PRLIM=(RATLIM-1.0)/(RATLIM+1.0)
      DO 10 J=1,N
      JJ=JJCOL(J)
      AY=Y(J)/AXNEG
      AYY=YY(J)/AXPOS
      PREF=(AYY-AY)/(AYY+AY)
      FREQ=AYY+AY
      IF(FREQ.GT.FRQLIM) FREQ=FRQLIM
      IF(PREF.GT.PRLIM)PREF=PRLIM
      IF(PREF.LT.-PRLIM)PREF=-PRLIM
      IF(ABS(PREF).LT.0.001)PREF=0.001
      COLWGT(J)=CCWT(JJ)*(FREQ/FRQLIM)**ICWEXP*(ABS(PREF)/PRLIM)**IPREXP
      Y(J)=PREF/PRLIM
   10 CONTINUE
      CALL YXMULT(M,MM,N,NN,NDAT,Y,X,IIROW,IADDR,ROWWGT,COLWGT,IDAT)
      DO 20 I=1,M
   20 X(I)=X(I)/ROWWGT(I)
      CALL XMAXMI(X,AXMAX,AXMIN,M)
      IF(ABS(AXMIN).GT.AXMAX)AXMAX=ABS(AXMIN)
      DO 30 I=1,M
   30 X(I)=X(I)/AXMAX
C WE NOW ABOLISH COLUMN WEIGHTS
      DO 40 J=1,N
      YY(J)=1.0
      JJ=JJCOL(J)
   40 COLWGT(J)=CCWT(JJ)
      CALL YXMULT(M,MM,N,NN,NDAT,YY,RTOT,IIROW,IADDR,
     1ROWWGT,COLWGT,IDAT)
      CALL YXMULT(M,MM,N,NN,NDAT,Y,XX,IIROW,IADDR,ROWWGT,COLWGT,IDAT)
      DO 50 I=1,M
   50 X(I)=X(I)+XX(I)/RTOT(I)
      RETURN
      END
C
      SUBROUTINE ZONEUP(X,AXMIN,CRMIN,CRMAX,AXMAX,M,MZ,MZOUT,
     1MZCRIT,IZONE)
C INPUT IS ORDINATION IN VECTOR X, WITH MAXIMUM AXMAX, MINIMUM
C AXMIN.  SETS UP ZONED ORDINATION, STORED IN VECTOR IZONE.
C CRITICAL ZONE LIES BERTWEEN CRMIN,CRMAX.  TOTAL NUMBER OF
C ZONES IS MZ.
      REAL X(M)
      INTEGER IZONE(M)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      MZCRIT=MZ-2*MZOUT
      SMALL=1.0E-10
      SEG1=(CRMIN-AXMIN)/(FLOAT(MZOUT)+SMALL)+SMALL
      SEG2=(CRMAX-CRMIN)/(FLOAT(MZCRIT)+SMALL)+SMALL
      SEG3=(AXMAX-CRMAX)/(FLOAT(MZOUT)+SMALL)+SMALL
      DO 10 I=1,M
      AX=X(I)
      IF(AX.GE.CRMIN) GOTO 3
      IZ=IFIX((AX-AXMIN)/SEG1)+1
      IF(IZ.GT.MZOUT) IZ=MZOUT
      IF(IZ.LT.1)IZ=1
      GOTO 8
    3 IF(AX.LE.CRMAX) GOTO 6
      IZ=IFIX((AX-CRMAX)/SEG3)+1
      IF(IZ.LT.1) IZ=1
      IF(IZ.GT.MZOUT) IZ=MZOUT
      IZ=IZ+MZ-MZOUT
      GOTO 8
    6 IZ=IFIX((AX-CRMIN)/SEG2)+1
      IF(IZ.LT.1)IZ=1
      IF(IZ.GT.MZCRIT)IZ=MZCRIT
      IZ=IZ+MZOUT
    8 IZONE(I)=IZ
   10 CONTINUE
      RETURN
      END
C
C---Argument PRECIS added by P.Minchin June 1997
      SUBROUTINE TOPIND(N,NN,MIND,FEEBLE,Y,INDORD,INDSIG,
     1JJCOL,INDPOT,JNAM,NIND,LIND,PRECIS)
C INPUT IS INDICATOR VALUES STORED IN Y.  SETS UP NIND BEST
C INDICATORS IN INDORD, WITH THEIR SIGN IN INDSIG.  IY IS WORKSPACE.
C NIND IS SET TO MIND UNLESS THERE IS SHORTAGE OF GOOD INDICATORS.
      REAL Y(N)
      INTEGER INDORD(N),INDSIG(MIND),JJCOL(N),INDPOT(NN)
      INTEGER JNAM(NN)
      INTEGER LIND(10)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      IBIG=10000
      DO 10 J=1,N
   10 INDORD(J)=-IBIG*IFIX(ABS(Y(J)*500.0))-IBIG+J
      CALL ISORT(INDORD,N)
      DO 20 J=1,N
      IV=-INDORD(J)
   20 INDORD(J)=(IV/IBIG)*IBIG-IV+IBIG
C INDORD NOW CONTAINS ORDERING BUT MUST BE DOCTORED TO TRUNCATE OFF
C POOR AND DISALLOWED INDICATORS
      NIND=0
      DO 60 IND=1,N
      IF(NIND.EQ.MIND) GOTO 60
      J=INDORD(IND)
      JJ=JJCOL(J)
      JJP=INDPOT(JJ)
      IF(JJP.LT.1) GOTO 60
      IP=INDPOT(JJP)
      IF(IP.LT.1) GOTO 60
C---Comparison changed to use PRECIS: P.Minchin June 1997
C      IF(ABS(Y(J)).LT.FEEBLE) GOTO 60
      IF(FEEBLE-ABS(Y(J)).GT.PRECIS) GOTO 60
      IL=JNAM(JJ)
      IF(LIND(IL).EQ.0) GOTO 60
      NIND=NIND+1
      INDORD(NIND)=J
      INDPOT(JJP)=-INDPOT(JJP)
      INDSIG(NIND)=1
      IF(Y(J).LT.0) INDSIG(NIND)=-1
   60 CONTINUE
      IF(NIND.EQ.0) GOTO 80
      DO 70 IND=1,NIND
      J=INDORD(IND)
      JJ=JJCOL(J)
      JJP=IABS(INDPOT(JJ))
      INDPOT(JJP)=JJP
   70 CONTINUE
   80 RETURN
      END
C
      SUBROUTINE CODESC(M,MM,N,NN,NDAT,NIND,INDORD,IX,IY,
     1IIROW,IADDR,IDAT)
C STARTING WITH NIND BEST INDICATORS, STORES INDICATOR-COMPOSITION
C OF SAMPLES IN CODED FORM IN IX.  THE FIRST (BEST) INDICATOR IS GIVEN
C A CODED SCORE OF 1, THE NEXT A SCORE OF 2, THE NTH A SCORE 2**(N-1).
C CODE NUMBERS ARE ADDED TO OBTAIN CODED INDICATOR-COMPOSITION.
      INTEGER INDORD(N),IX(M),IY(N),IIROW(M),IADDR(MM),IDAT(NDAT)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      DO 10 J=1,N
   10 IY(J)=0
      IIY=1
      DO 20 IND=1,NIND
      J=INDORD(IND)
      IY(J)=IIY
   20 IIY=IIY*2
      DO 30 I=1,M
      II=IIROW(I)
      IIX=0
      ID=IADDR(II)
   25 J=IDAT(ID)
      IF(J.EQ.-1) GOTO 26
      IIX=IIX+IY(J)
      ID=ID+1
      GOTO 25
   26 IX(I)=IIX
   30 CONTINUE
      RETURN
      END
C
      SUBROUTINE TABLE(M,MMZ,MMS,MIND,IX,IZONE,INDSIG,IPICT,
     1INDTRU,IIND)
C CODED INDICATOR-COMPOSITION IS IN IX.  CALCULATES MATRIX IPICT,
C RELATING ZONES TO INDICATOR-SCORES.  ONLY IIND TOP INDICATORS ARE
C USED.  ISHIFT IS ADDED TO INDICATOR-SCORES TO KEEP THEM POSITIVE.
C IF THE SWITCH INDTRU=1, SUBROUTINE ALSO REPLACES CODED INDICATOR-
C COMPOSITION BY THE TRUE INDICATOR-SCORES.
      INTEGER IX(M),IZONE(M),INDSIG(MIND),IPICT(MMZ,MMS)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      COMMON/PICT/MZ,MS,IZD,IIZD,ISD,ISHIFT,MZIND,MZCRIT,MZOUT,NIND
      MS=IIND+1
      ISHIFT=1
      DO 10 IND=1,IIND
      IF(INDSIG(IND).LT.0) ISHIFT=ISHIFT+1
   10 CONTINUE
      DO 20 IZ=1,MZ
      DO 20 IS=1,MS
   20 IPICT(IZ,IS)=0
      DO 30 I=1,M
      IZ=IZONE(I)
      IS=ISHIFT
      IIX=IX(I)
      DO 25 IND=1,IIND
      IIIX=IIX/2
      IS=IS+INDSIG(IND)*(IIX-IIIX*2)
   25 IIX=IIIX
      IF(INDTRU.EQ.1)IX(I)=IS
   30 IPICT(IZ,IS)=IPICT(IZ,IS)+1
      RETURN
      END
C
      SUBROUTINE FIND(MMZ,MMS,IPICT,IZD1,ISD1,MISCL)
C INPUT IS MATRIX IPICT, RELATING INDICATOR SCORES TO ZONES.
C SUBROUTINE FINDS CLASSIFICATION CENTER IZD1,ISD1 THAT MINIMIZES
C NUMBER OF MISCLASSIFICATIONS MISCL.
      INTEGER IPICT(MMZ,MMS)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      COMMON/PICT/MZ,MS,IZD,IIZD,ISD,ISHIFT,MZIND,MZCRIT,MZOUT,NIND
      MINZ=MZOUT+MZIND
      MAXZ=MZOUT+MZCRIT
C WE FORM THE TOTALS IN IPICT OF THE ELEMENTS THAT LIE BELOW AND TO
C THE LEFT OF A GIVEN ONE. I.E. THE NEW VALUE OF IPICT(IZ,IS) IS THE
C SUM OF ALL THE OLD VALUES IF IPICT(IIZ,IIS) FOR WHICH IIZ IS LESS
C THAN OR EQUAL TO IZ AND IIS IS LESS THAN OR EQUAL TO IS.
      DO 10 IS=2,MS
   10 IPICT(1,IS)=IPICT(1,IS-1)+IPICT(1,IS)
      DO 20 IZ=2,MZ
   20 IPICT(IZ,1)=IPICT(IZ-1,1)+IPICT(IZ,1)
      DO 30 IS=2,MS
      DO 30 IZ=2,MZ
      IIS=IS-1
      IIZ=IZ-1
   30 IPICT(IZ,IS)=IPICT(IIZ,IS)+IPICT(IZ,IIS)-
     1IPICT(IIZ,IIS)+IPICT(IZ,IS)
      MISCL=10000
      DO 40 IZ=MINZ,MAXZ
      DO 40 IS=1,MS
      IIZ=IZ-MZIND
      MISS=IPICT(IIZ,MS)-IPICT(IIZ,IS)+IPICT(MZ,IS)-IPICT(IZ,IS)
      A=FLOAT(IPICT(IIZ,MS))
      B=FLOAT(IPICT(MZ,MS)-IPICT(IZ,MS))
      C=ABS((A-B)/(A+B))
      IA=IABS(IS-ISHIFT)
      IB=IABS(1+MZ-IZ-IIZ)
      IF(MISS-MISCL) 35,36,40
   35 MISCL=MISS
      IZD1=IZ
      ISD1=IS
      IIA=IA
      IIB=IB
      CC=C
      GOTO 40
   36 IF(C-CC) 35,38,40
   38 IF(IA.LT.IIA) GOTO 35
      IF(IB.LT.IIB) GOTO 35
   40 CONTINUE
      RETURN
      END
C
      SUBROUTINE REPORT(M,MM,N,NN,NDAT,MMZ,MMS,IC,X,XX,ROWWGT,
     1Y,YY,COLWGT,IX,IZONE,IIROW,IY,JJCOL,IADDR,IDAT,IPICT,
     2INAME1,INAME2,JNAME1,JNAME2,JNAM)
C REPORTS ON DICHOTOMY.  TRUE INDICATOR SCORES ARE NOW IN IX.
C MATRIX IPICT CONTAINS DIAGRAM OF DICHOTOMY, RELATING ZONES
C TO INDICATOR SCORES.
      REAL X(M),XX(M),ROWWGT(M),Y(N),YY(N),COLWGT(N)
C---Changed ITEM to CHARACTER: P.Minchin June 1997
      CHARACTER*4 ITEM(200)
      INTEGER JNAM(NN)
C---Changed INAME, JNAME to CHARACTER: P.Minchin June 1997
      CHARACTER*4 INAME1(MM),INAME2(MM),JNAME1(NN),JNAME2(NN)
      INTEGER IX(M),IZONE(M),IIROW(M),IY(N),JJCOL(N),
     1IADDR(MM),IDAT(NDAT),IPICT(MMZ,MMS),NCAT(6)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      COMMON/PICT/MZ,MS,IZD,IIZD,ISD,ISHIFT,MZIND,MZCRIT,MZOUT,NIND
C---Variable PRECIS added P.Minchin  June 1997
      COMMON/LIMS/RARE,FEEBLE,FRQLIM,TOL,RATLIM,REPLIM,PRECIS
      COMMON/SWITCH/IFAIL,IDIAGR,ISTOP,IREWT
      COMMON/IARBS/ICWEXP,IEND,MMIN,IPREXP,LEVMAX
      COMMON/WORK/ITEM
      COMMON/SECOND/ISEC
      DO 10 ICAT=1,6
   10 NCAT(ICAT)=0
      DO 20 I=1,M
      IZ=IZONE(I)
      IS=IX(I)
      IF(IZ.GT.IIZD) GOTO 13
      IF(IS.GT.ISD) GOTO 12
      ICAT=1
      GOTO 18
   12 ICAT=3
      GOTO 18
   13 IF(IZ.GT.IZD) GOTO 16
      IF(IS.GT.ISD) GOTO 15
      ICAT=2
      GOTO 18
   15 ICAT=5
      GOTO 18
   16 IF(IS.GT.ISD) GOTO 17
      ICAT=6
      GOTO 18
   17 ICAT=4
   18 X(I)=FLOAT(ICAT)
      NCAT(ICAT)=NCAT(ICAT)+1
   20 CONTINUE
      NNEG=NCAT(1)+NCAT(2)+NCAT(3)
      NPOS=NCAT(4)+NCAT(5)+NCAT(6)
      CALL INDSCO(M,MM,N,NN,NDAT,X,AXPOS,AXNEG,3.5,3.5,
     1Y,YY,IIROW,ROWWGT,IADDR,IDAT)
      PRLIM=(REPLIM-1.0)/(REPLIM+1.0)-0.0001
      DO 30 J=1,N
      AY=Y(J)/AXNEG
      AYY=YY(J)/AXPOS
      IIY=0
C--Comparisons changed to use PRECIS: P.Minchin June 1997
C      IF(AY.GE.RARE) IIY=1
C      IF(AYY.GE.RARE) IIY=1
      IF((AY-RARE).GE.PRECIS) IIY=1
      IF((AYY-RARE).GE.PRECIS) IIY=1
      PREF=(AYY-AY)/(AYY+AY)
C--Comparisons changed to use PRECIS: P.Minchin June 1997
C      IF(PREF.GT.PRLIM) GOTO 25
C      IF(PREF.LT.-PRLIM) GOTO 23
      IF((PREF-PRLIM).GT.PRECIS) GOTO 25
      IF((-PREF-PRLIM).GT.PRECIS) GOTO 23
      IY(J)=IIY
      GOTO 30
   23 IY(J)=2*IIY
      GOTO 30
   25 IY(J)=3*IIY
   30 CONTINUE
C WE NOW HAVE A VARIABLE IY THAT IS 0 FOR RARITIES, 3 FOR POSITIVE
C PREFERENTIALS, 2 FOR NEGATIVE PREFERENTIALSS, 1 FOR INDIFFERENTS.
      IF(NIND.EQ.0) GOTO 60
      ISD1=ISD-ISHIFT
      ISD2=ISD1+1
      WRITE (IUOUT2,1050) ISD1,ISD2
 1050 FORMAT(1X,'MAXIMUM INDICATOR SCORE FOR NEGATIVE GROUP ',I4,
     1'     MINIMUM INDICATOR SCORE FOR POSITIVE GROUP ',I4)
      IF(IDIAGR.EQ.1) CALL DIAGR(IPICT,MMZ,MMS)
   60 IIC=IC*2
      CALL BIN(ITEM,IIC)
      WRITE (IUOUT2,1002) IIC,NNEG,(ITEM(IT),IT=1,30)
 1002 FORMAT('0ITEMS IN NEGATIVE GROUP',I4,'  (N=',
     1I5,')',9X,'I.E. GROUP ',30A1)
      CALL XLIST(M,MM,X,IIROW,1,2,3,INAME1,INAME2)
      IF(NIND.EQ.0) GOTO 70
      NOUT=NCAT(2)
      IF(NOUT.EQ.0) GOTO 65
      WRITE (IUOUT2,1003) NOUT
 1003 FORMAT('0BORDERLINE NEGATIVES    (N=',I5,')')
      CALL XLIST(M,MM,X,IIROW,2,2,2,INAME1,INAME2)
   65 NOUT=NCAT(3)
      IF(NOUT.EQ.0) GOTO 70
      WRITE (IUOUT2,1004) NOUT
 1004 FORMAT('0MISCLASSIFIED NEGATIVES (N=',I5,')')
      CALL XLIST(M,MM,X,IIROW,3,3,3,INAME1,INAME2)
   70 IIC=IC*2+1
      CALL BIN(ITEM,IIC)
      WRITE (IUOUT2,1005) IIC,NPOS,(ITEM(IT),IT=1,30)
 1005 FORMAT('0ITEMS IN POSITIVE GROUP',I4,'  (N=',
     1I5,')',9X,'I.E. GROUP ',30A1)
      CALL XLIST(M,MM,X,IIROW,4,5,6,INAME1,INAME2)
      IF(NIND.EQ.0) GOTO 80
      NOUT=NCAT(5)
      IF(NOUT.EQ.0) GOTO 75
      WRITE (IUOUT2,1006) NOUT
 1006 FORMAT('0BORDERLINE POSITIVES    (N=',I5,')')
      CALL XLIST(M,MM,X,IIROW,5,5,5,INAME1,INAME2)
   75 NOUT=NCAT(6)
      IF(NOUT.EQ.0) GOTO 80
      WRITE (IUOUT2,1007) NOUT
 1007 FORMAT('0MISCLASSIFIED POSITIVES (N=',I5,')')
      CALL XLIST(M,MM,X,IIROW,6,6,6,INAME1,INAME2)
C WE NOW LIST OUT THE COMMONER SPECIES ACCORDING AS THEY ARE
C PREFERENTIAL OR NEUTRAL
   80 IF(ISEC.EQ.2) GOTO 100
      CALL INDSCO(M,MM,N,NN,NDAT,X,AXPOS,AXNEG,3.5,3.5,
     1Y,YY,IIROW,ROWWGT,IADDR,IDAT)
      WRITE (IUOUT2,1010)
 1010 FORMAT('0NEGATIVE PREFERENTIALS')
      CALL YLIST(N,NN,Y,YY,IY,JJCOL,2,JNAME1,JNAME2,JNAM)
      WRITE (IUOUT2,1011)
 1011 FORMAT('0POSITIVE PREFERENTIALS')
      CALL YLIST(N,NN,Y,YY,IY,JJCOL,3,JNAME1,JNAME2,JNAM)
      WRITE (IUOUT2,1012)
 1012 FORMAT('0NON-PREFERENTIALS')
      CALL YLIST(N,NN,Y,YY,IY,JJCOL,1,JNAME1,JNAME2,JNAM)
  100 RETURN
      END
C
      SUBROUTINE XYMULT(M,MM,N,NN,NDAT,X,Y,IIROW,IADDR,ROWWGT,
     1COLWGT,IDAT)
C FORMS MATRIX PRODUCT Y=AX, APPLYING ROW AND COLUMN WEIGHTS
C ROWWGT,COLWGT.
      REAL X(M),Y(N),ROWWGT(M),COLWGT(N)
      INTEGER IIROW(M),IADDR(MM),IDAT(NDAT)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      DO 10 J=1,N
   10 Y(J)=0.0
      DO 20 I=1,M
      II=IIROW(I)
      AX=X(I)*ROWWGT(I)
      ID=IADDR(II)
   15 J=IDAT(ID)
      IF (J.EQ.-1) GOTO 20
      Y(J)=Y(J)+AX
      ID=ID+1
      GOTO 15
   20 CONTINUE
      DO 30 J=1,N
   30 Y(J)=Y(J)*COLWGT(J)
      RETURN
      END
C
      SUBROUTINE YXMULT(M,MM,N,NN,NDAT,Y,X,IIROW,IADDR,
     1ROWWGT,COLWGT,IDAT)
C FORMS MATRIX PRODUCT X=AY, WEIGHTED AS SUBROUTINE XYMULT.
      REAL Y(N),X(M),ROWWGT(M),COLWGT(N)
      INTEGER IIROW(M),IADDR(MM),IDAT(NDAT)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      DO 10 J=1,N
   10 Y(J)=Y(J)*COLWGT(J)
      DO 20 I=1,M
      II=IIROW(I)
      AX=0.0
      ID=IADDR(II)
   15 J=IDAT(ID)
      IF(J.EQ.-1) GOTO 16
      AX=AX+Y(J)
      ID=ID+1
      GOTO 15
   16 X(I)=AX*ROWWGT(I)
   20 CONTINUE
      DO 30 J=1,N
   30 Y(J)=Y(J)/COLWGT(J)
      RETURN
      END
C
      SUBROUTINE INDSCO(M,MM,N,NN,NDAT,X,AXPOS,AXNEG,
     1CUT1,CUT2,Y,YY,IIROW,ROWWGT,IADDR,IDAT)
C INPUT IS ORDINATION IN X.  OUTPUT IS NEGATIVE INDICATOR SCORES IN Y,
C POSITIVE INDICATOR SCORES IN YY.  AXPOS,AXNEG ARE ROW-WEIGHTED SUMS
C OF POSITIVE AND NEGATIVE ELEMENTS.  CUT1,CUT2 ARE CUT-POINTS FOR
C ZONE OF INTERMEDIATENESS.
      INTEGER IIROW(M),IADDR(MM),IDAT(NDAT)
      REAL X(M),Y(N),YY(N),ROWWGT(M)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      CUTMID=(CUT1+CUT2)/2.0
      CUTHLF=(CUT2-CUT1)/2.0+1.0E-10
      AXPOS=0.0
      AXNEG=0.0
      DO 10 J=1,N
      Y(J)=0.0
   10 YY(J)=0.0
      DO 30 I=1,M
      II=IIROW(I)
      ID=IADDR(II)
      AX=(X(I)-CUTMID)/CUTHLF
      IF(AX.GT.1.0)AX=1.0
      IF(AX.LT.-1.0)AX=-1.0
      IF(AX.GT.0.0) GOTO 26
      AX=AX*ROWWGT(I)
      AXNEG=AXNEG-AX
   25 J=IDAT(ID)
      IF(J.EQ.-1) GOTO 30
      Y(J)=Y(J)-AX
      ID=ID+1
      GOTO 25
   26 AX=AX*ROWWGT(I)
      AXPOS=AXPOS+AX
   27 J=IDAT(ID)
      IF(J.EQ.-1) GOTO 30
      YY(J)=YY(J)+AX
      ID=ID+1
      GOTO 27
   30 CONTINUE
      RETURN
      END
C
      SUBROUTINE DIAGR(IPICT,MMZ,MMS)
C PRINTS OUT DIAGRAM OF RELATION BETWEEN ZONES AND INDICATOR-SCORES
C STORED IN MATRIX IPICT.  *'S ARE USED AS PUNCTUATION.
      INTEGER IPICT(MMZ,MMS)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      COMMON/PICT/MZ,MS,IZD,IIZD,ISD,ISHIFT,MZIND,MZCRIT,MZOUT,NIND
      IBIG=1000000
      MZZ=MZ+2
      DO 10 IZ=1,MZZ
      IPICT(IZ,MS+1)=IBIG
   10 IPICT(IZ,MS+2)=IZ
      MSS=MS+2
      DO 20 IS=1,MSS
      IPICT(MZ+1,IS)=IBIG
   20 IPICT(MZ+2,IS)=IS-ISHIFT
      IPICT(MZZ,MSS)=IBIG
      IPICT(MZ+2,MS+1)=IBIG
      DO 30 IS=1,MSS
      IIZ=MZ-IZD+2
      IZ=MZ+4
      DO 21 IIIZ=1,IIZ
      IPICT(IZ,IS)=IPICT(IZ-2,IS)
   21 IZ=IZ-1
      IPICT(IZ,IS)=IBIG
      IZ=IZ-1
      IIZ=IZD-IIZD
      DO 22 IIIZ=1,IIZ
      IPICT(IZ,IS)=IPICT(IZ-1,IS)
   22 IZ=IZ-1
      IPICT(IZ,IS)=IBIG
   30 CONTINUE
      MZZ=MZ+4
      DO 40 IZ=1,MZZ
      IS=MS+3
      IIS=MS-ISD+2
      DO 31 IIIS=1,IIS
      IPICT(IZ,IS)=IPICT(IZ,IS-1)
   31 IS=IS-1
      IPICT(IZ,IS)=IBIG
   40 CONTINUE
C WE NOW HAVE THE DESIRED INFORMATION IN IPICT;  ALL WE NOW NEED TO
C DO IS TO PRINT IT OUT
      MSS=MS+3
      IS=MSS
      DO 50 IIIS=1,MSS
      WRITE (IUOUT2,1000) (IPICT(IZ,IS),IZ=1,MZZ)
 1000 FORMAT(1X,60I2)
      IS=IS-1
   50 CONTINUE
      RETURN
      END
C
      SUBROUTINE XLIST(M,MM,X,IIROW,ICAT1,ICAT2,
     1ICAT3,INAME1,INAME2)
C PRINTS OUT LIST OF INDIVIDUALS (ROWS) FOR WHICH X=ICAT1,2,3.
      REAL X(M)
      INTEGER IIROW(M)
C---Changed ITEM, INAME to CHARACTER: P.Minchin June 1997
      CHARACTER*4 ITEM(200),INAME1(MM),INAME2(MM)
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      COMMON/WORK/ITEM
      COMMON/SECOND/ISEC
      NITEM=12
      IF(ISEC.EQ.2) NITEM=11
      ITEND=2*(NITEM-1)
      IT=0
      I=0
    3 I=I+1
      IIX=IFIX(X(I)+0.01)
      IF((IIX-ICAT1)*(IIX-ICAT2)*(IIX-ICAT3).NE.0) GOTO 5
      II=IIROW(I)
      IT=IT+1
      ITEM(IT)=INAME1(II)
      IT=IT+1
      ITEM(IT)=INAME2(II)
    5 IF(I.EQ.M) GOTO 6
      IF(IT.LE.ITEND) GOTO 3
      IF(ISEC.EQ.2) GOTO 10
      WRITE (IUOUT2,1000) (ITEM(IIT),IIT=1,IT)
      IT=0
      GOTO 3
    6 IF(ISEC.EQ.2) GOTO 15
      IF(IT.NE.0) WRITE (IUOUT2,1000) (ITEM(IIT),IIT=1,IT)
 1000 FORMAT(12(1X,2A4,1X))
      RETURN
   10 WRITE (IUOUT2,1001) (ITEM(IIT),IIT=1,IT)
      IT=0
      GOTO 3
   15 IF(IT.NE.0) WRITE (IUOUT2,1001) (ITEM(IIT),IIT=1,IT)
 1001 FORMAT(11(2X,A4,1X,A4))
      RETURN
      END
C
      SUBROUTINE YLIST(N,NN,Y1,Y2,IY,JJCOL,IIY,JNAME1,JNAME2,JNAM)
C PRINTS OUT LIST OF ATTRIBUTES (COLUMNS) FOR WHICH IY(J)=IIY,
C TOGETHER WITH NUMBERS OF OCCURRENCES ON 2 SIDES OF DICHOTOMY.
      REAL Y1(N),Y2(N)
      INTEGER IY(N),JJCOL(N)
C---Changed ITEM, JNAME to CHARACTER: P.Minchin June 1997
      CHARACTER*4 ITEM(200),JNAME1(NN),JNAME2(NN)
      INTEGER JNAM(NN)
C---Declare function I2CHAR to be CHARACTER*4: P.Minchin June 1997
      CHARACTER*4 I2CHAR
C---FOLLOWING COMMON BLOCK ADDED BY P.R.MINCHIN SEPT 1986
      COMMON /LUNITS/ IUIN1,IUIN2,IUOUT1,IUOUT2,IUOUT3
      COMMON/WORK/ITEM
      NITEM=6
      ITEND=5*(NITEM-1)
      IT=0
      J=0
    3 J=J+1
      IF(IY(J).NE.IIY) GOTO 5
      JJ=JJCOL(J)
      IT=IT+1
      ITEM(IT)=JNAME1(JJ)
      IT=IT+1
      ITEM(IT)=JNAME2(JJ)
      IT=IT+1
C---Convert values of JNAME to CHARACTER: P.Minchin June 1997
      ITEM(IT)=I2CHAR(JNAM(JJ))
      ITEM(IT)=ITEM(IT)(4:4)
      IT=IT+1
C---Convert values of Y1 to CHARACTER: P.Minchin June 1997
      ITEM(IT)=I2CHAR(IFIX(Y1(J)+0.001))
      ITEM(IT)=ITEM(IT)(2:4)
      IT=IT+1
C---Convert values of Y2 to CHARACTER: P.Minchin June 1997
      ITEM(IT)=I2CHAR(IFIX(Y2(J)+0.001))
      ITEM(IT)=ITEM(IT)(2:4)
    5 IF(J.EQ.N) GOTO 6
      IF(IT.LE.ITEND) GOTO 3
      WRITE (IUOUT2,1000) (ITEM(IIT),IIT=1,IT)
      IT=0
      GOTO 3
    6 IF(IT.NE.0) WRITE (IUOUT2,1000) (ITEM(IIT),IIT=1,IT)
C---Modified format: P.Minchin June 1997
C 1000 FORMAT(6(1X,A4,1X,A4,I1,'(',I3,',',I3,')'))
 1000 FORMAT(6(1X,A4,1X,A4,A1,'(',A3,',',A3,')'))
      RETURN
      END

